{
  "openapi": "3.0.3",
  "info": {
    "title": "Kariz API with Endpoint-Specific Results",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.trykariz.com",
      "description": "Kariz API"
    }
  ],
  "paths": {
    "/connect/token": {
      "post": {
        "servers": [
          {
            "url": "https://sts.demo.trykariz.com",
            "description": "Authentication Server"
          }
        ],
        "tags": [
          "Authentication"
        ],
        "security": [],
        "summary": "Obtain Access Token",
        "description": "Kariz uses an access token to control access to our API via OAuth 2.0 Password Grant. Use this endpoint to retrieve an access token.\n\n You will need valid user and application credentials. If you do not have an account, [schedule a demo]([https://cal.com/kariz-pepijn/intro-unified-api]) to gain access. Use this token in the Authorization header of subsequent calls.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "default": "password",
                    "enum": [
                      "password"
                    ],
                    "description": "The type of OAuth grant being used."
                  },
                  "username": {
                    "type": "string",
                    "example": "john@nike.com",
                    "description": "Your developer username in Kariz. This can be found in your account. It's the credential you use to login."
                  },
                  "password": {
                    "type": "string",
                    "example": "secretpassword",
                    "description": "Your developer password in Kariz. This can be found in your account. It's the credential you use to login."
                  },
                  "client_id": {
                    "type": "string",
                    "example": "client123",
                    "description": "The client id for your application. This can be found in your account."
                  },
                  "client_secret": {
                    "type": "string",
                    "example": "clientsecret123",
                    "description": "The client secret for your application. This can be found in your account."
                  }
                },
                "required": [
                  "grant_type",
                  "username",
                  "password",
                  "client_id",
                  "client_secret"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /connect/token Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "example": "ya29.a0AfH6SMDtYZB_...your_access_token...",
                      "description": "The token that can be used to authenticate API requests."
                    },
                    "token_type": {
                      "type": "string",
                      "example": "bearer",
                      "description": "The type of the token."
                    },
                    "expires_in": {
                      "type": "integer",
                      "example": 3600,
                      "description": "The number of seconds until the token expires. By default the token expires every 90 days."
                    },
                    "scope": {
                      "type": "string",
                      "example": "read write",
                      "description": "The scope(s) associated with the token."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response for invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid_grant",
                      "description": "Error code indicating the issue."
                    },
                    "error_description": {
                      "type": "string",
                      "example": "Invalid username or password",
                      "description": "A human-readable description of the error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/KarizClientApp/GetTpUserAuthDisposableToken": {
      "get": {
        "tags": [
          "Magic link"
        ],
        "summary": "Create a Magic link",
        "description": "Use Magic Links to invite users to connect their accounts. Generate a URL and share it with the end user. \nOnce they finish authenticating via the Magic Link, you’ll have a valid token to perform API requests. \nWe also support token authentication, reach out to us for more information on this.",
        "parameters": [
          {
            "name": "tpUserId",
            "in": "query",
            "description": "Your end user's email address. This is purely for identification purposes. Setting this value will not cause any emails to be sent.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "redirectUrl",
            "in": "query",
            "description": "After user finished the authentication process, we will redirect the user on this URL.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "Scopes are the channels the user will be asked to authenticate with. By default, user will be given the option to authenticate to all supported channels.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "shopify",
                  "amazon",
                  "woocommerce",
                  "bol",
                  "sharetribe",
                  "lightspeed_c",
                  "mirakl",
                  "magento",
                  "bigcommerce"
                ]
              },
              "default": [
                "shopify",
                "amazon",
                "woocommerce",
                "bol",
                "sharetribe",
                "lightspeed_c",
                "mirakl",
                "magento",
                "bigcommerce"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GET /TpUserAuthDisposableToken Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KarizClientAppDisposableToken"
                },
                "example": {
                  "uri": "https://www.app.trykariz.com/en/tpuser/authorize?token=Mvznqqrm...AuD639OMo%3D",
                  "token": "Mvznqqrm...AuD639OMo%3D",
                  "expirationUtcUnixTimeSeconds": 1736269316
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "kariz_core_api"
            ]
          }
        ]
      }
    },
    "/api/KarizClientApp/Unified/Customers": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "List all Customers",
        "description": "Retrieves a list of customers.\n\nThe response is compatible with the Shopify REST API Customer schema. For detailed schema explanations, see the [Shopify REST API customer resource]([https://shopify.dev/docs/api/admin-rest/2025-01/resources/customer]).",
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "Specify the sales channel from which to fetch user data. Each request can only retrieve data from a single channel at a time. Since requests are processed in real-time, response times vary depending on the sales channel’s speed",
            "schema": {
              "type": "string",
              "enum": [
                "amazon",
                "bigcommerce",
                "bol",
                "lightspeed_c",
                "shopify",
                "woocommerce",
                "mirakl",
                "magento",
                "bigcommerce"
              ]
            },
            "required": true
          },
          {
            "name": "tpUserId",
            "in": "query",
            "description": "The ID of your user(must be authenticated with target channels).",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "completionCallbackUrl",
            "in": "query",
            "description": "To receive the completion event. You can use a webhook to find out whether the task is finished.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The supported parameters to query the data depend on the channels API. Supported channels shows which parameters can be used for which channels.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCustomerBody"
                  },
                  {
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ShopifyBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/WoocommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/AmazonBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BolBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/LightspeedCBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BigCommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/MiraklBodyParams"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Shopify": {
                  "summary": "Example with Shopify configuration.",
                  "value": {
                    "params": {
                      "shopify": [
                        {
                          "key": "baseUrl",
                          "value": "your-shop.myshopify.com"
                        },
                        {
                          "key": "token",
                          "value": "your-shopify-oauth-token"
                        }
                      ]
                    },
                    "created_at_max": "2024-01-31T23:59:59-05:00",
                    "created_at_min": "2024-01-01T00:00:00-05:00",
                    "fields": "id,email,first_name,last_name,phone",
                    "ids": "1234567890,9876543210,5555555555",
                    "limit": 100,
                    "since_id": 1234567889,
                    "updated_at_max": "2024-03-20T10:30:00Z",
                    "updated_at_min": "2024-03-01T00:00:00Z"
                  }
                },
                "Lightspeed-C": {
                  "summary": "Example with Lightspeed C configuration.",
                  "value": {
                    "params": {
                      "lightspeed_c": [
                        {
                          "key": "region",
                          "value": "nl"
                        },
                        {
                          "key": "token",
                          "value": "Basic eHh4eHh4"
                        }
                      ]
                    },
                    "created_at_max": "2024-01-31T23:59:59-05:00",
                    "created_at_min": "2024-01-01T00:00:00-05:00",
                    "fields": "id,email,first_name,last_name,phone",
                    "ids": "1234567890,9876543210,5555555555",
                    "limit": 100,
                    "since_id": 1234567889,
                    "updated_at_max": "2024-03-20T10:30:00Z",
                    "updated_at_min": "2024-03-01T00:00:00Z"
                  }
                },
                "Bigcommerce": {
                  "summary": "Example with Bigcommerce configuration.",
                  "value": {
                    "params": {
                      "bigcommerce": [
                        {
                          "key": "store_hash",
                          "value": "store hash"
                        },
                        {
                          "key": "token",
                          "value": "store token"
                        }
                      ]
                    },
                    "created_at_max": "2024-01-31T23:59:59-05:00",
                    "created_at_min": "2024-01-01T00:00:00-05:00",
                    "fields": "id,email,first_name,last_name,phone",
                    "ids": "1234567890,9876543210,5555555555",
                    "limit": 100,
                    "since_id": 1234567889,
                    "updated_at_max": "2024-03-20T10:30:00Z",
                    "updated_at_min": "2024-03-01T00:00:00Z"
                  }
                },
                "Woocommerce": {
                  "summary": "Example with Woocommerce configuration.",
                  "value": {
                    "params": {
                      "woocommerce": [
                        {
                          "key": "baseUrl",
                          "value": "https://domain.com/wordpress"
                        },
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "created_at_max": "2024-01-31T23:59:59-05:00",
                    "created_at_min": "2024-01-01T00:00:00-05:00",
                    "fields": "id,email,first_name,last_name,phone",
                    "ids": "1234567890,9876543210,5555555555",
                    "limit": 100,
                    "since_id": 1234567889,
                    "updated_at_max": "2024-03-20T10:30:00Z",
                    "updated_at_min": "2024-03-01T00:00:00Z"
                  }
                },
                "Amazon": {
                  "summary": "Example with Amazon configuration.",
                  "value": {
                    "params": {
                      "amazon": [
                        {
                          "key": "endpoint",
                          "value": "https://sellingpartnerapi-eu.amazon.com"
                        },
                        {
                          "key": "marketplaceIds",
                          "value": [
                            "A1805IZSGTT6HS",
                            "A1PA6795UKMFR9"
                          ]
                        },
                        {
                          "key": "token",
                          "value": "oauth token"
                        }
                      ]
                    },
                    "created_at_max": "2024-01-31T23:59:59-05:00",
                    "created_at_min": "2024-01-01T00:00:00-05:00",
                    "fields": "id,email,first_name,last_name,phone",
                    "ids": "1234567890,9876543210,5555555555",
                    "limit": 100,
                    "since_id": 1234567889,
                    "updated_at_max": "2024-03-20T10:30:00Z",
                    "updated_at_min": "2024-03-01T00:00:00Z"
                  }
                },
                "Bol": {
                  "summary": "Example with Bol configuration.",
                  "value": {
                    "params": {
                      "bol": [
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "created_at_max": "2024-01-31T23:59:59-05:00",
                    "created_at_min": "2024-01-01T00:00:00-05:00",
                    "fields": "id,email,first_name,last_name,phone",
                    "ids": "1234567890,9876543210,5555555555",
                    "limit": 100,
                    "since_id": 1234567889,
                    "updated_at_max": "2024-03-20T10:30:00Z",
                    "updated_at_min": "2024-03-01T00:00:00Z"
                  }
                },
                "Mirakl": {
                  "summary": "Example with Mirakl configuration.",
                  "value": {
                    "params": {
                      "mirakl": [
                        {
                          "key": "token",
                          "value": "bearer-token"
                        }
                      ]
                    },
                    "created_at_max": "2024-01-31T23:59:59-05:00",
                    "created_at_min": "2024-01-01T00:00:00-05:00",
                    "fields": "id,email,first_name,last_name,phone",
                    "ids": "1234567890,9876543210,5555555555",
                    "limit": 100,
                    "since_id": 1234567889,
                    "updated_at_max": "2024-03-20T10:30:00Z",
                    "updated_at_min": "2024-03-01T00:00:00Z"
                  }
                },
                "Magento": {
                  "summary": "Example with Magento configuration.",
                  "value": {
                    "params": {
                      "magento": [
                        {
                          "key": "baseUrl",
                          "value": "https://your-magento-store.com"
                        },
                        {
                          "key": "token",
                          "value": "token"
                        }
                      ]
                    },
                    "created_at_max": "2024-01-31T23:59:59-05:00",
                    "created_at_min": "2024-01-01T00:00:00-05:00",
                    "fields": "id,email,first_name,last_name,phone",
                    "ids": "1234567890,9876543210,5555555555",
                    "limit": 100,
                    "since_id": 1234567889,
                    "updated_at_max": "2024-03-20T10:30:00Z",
                    "updated_at_min": "2024-03-01T00:00:00Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /Unified/Customers Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseWrapper"
                },
                "example": {
                  "Errors": {},
                  "Output": {
                    "step": "transform",
                    "isSuccess": true,
                    "schemaValidationErrors": null,
                    "restErrors": null,
                    "operationErrors": null,
                    "unexpectedErrors": null,
                    "execution_id": "ed7ad663-4757-447c-b5cd-1e83c2380afc",
                    "override_count": 1,
                    "next_page_token_url": "https://api.trykariz.com/api/KarizClientApp/RunSync?configName=shopify_get_orders&tpUserId=1&data=%7B%22limit%22%3A1%2C%22next_page_token%22%3A%22eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0%22%7D",
                    "next_page_token": "eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0",
                    "result": {
                      "customers": [
                        {
                          "id": 1073339462,
                          "email": "steve.lastnameson@example.com",
                          "created_at": "2025-01-02T11:27:00-05:00",
                          "updated_at": "2025-01-02T11:27:00-05:00",
                          "first_name": "Steve",
                          "last_name": "Lastnameson",
                          "orders_count": 0,
                          "state": "disabled",
                          "total_spent": "0.00",
                          "last_order_id": null,
                          "note": null,
                          "verified_email": true,
                          "multipass_identifier": null,
                          "tax_exempt": false,
                          "tags": "",
                          "last_order_name": null,
                          "currency": "USD",
                          "phone": "+15142546011",
                          "addresses": [
                            {
                              "id": 1053317292,
                              "customer_id": 1073339462,
                              "first_name": "Mother",
                              "last_name": "Lastnameson",
                              "company": null,
                              "address1": "123 Oak St",
                              "address2": null,
                              "city": "Ottawa",
                              "province": "Ontario",
                              "country": "Canada",
                              "zip": "123 ABC",
                              "phone": "555-1212",
                              "name": "Mother Lastnameson",
                              "province_code": "ON",
                              "country_code": "CA",
                              "country_name": "Canada",
                              "default": true
                            }
                          ],
                          "tax_exemptions": [],
                          "email_marketing_consent": {
                            "state": "not_subscribed",
                            "opt_in_level": "single_opt_in",
                            "consent_updated_at": null
                          },
                          "sms_marketing_consent": {
                            "state": "not_subscribed",
                            "opt_in_level": "single_opt_in",
                            "consent_updated_at": null,
                            "consent_collected_from": "OTHER"
                          },
                          "admin_graphql_api_id": "gid://shopify/Customer/1073339462",
                          "default_address": {
                            "id": 1053317292,
                            "customer_id": 1073339462,
                            "first_name": "Mother",
                            "last_name": "Lastnameson",
                            "company": null,
                            "address1": "123 Oak St",
                            "address2": null,
                            "city": "Ottawa",
                            "province": "Ontario",
                            "country": "Canada",
                            "zip": "123 ABC",
                            "phone": "555-1212",
                            "name": "Mother Lastnameson",
                            "province_code": "ON",
                            "country_code": "CA",
                            "country_name": "Canada",
                            "default": true
                          }
                        },
                        {
                          "id": 207119551,
                          "email": "bob.norman@mail.example.com",
                          "created_at": "2025-01-02T11:26:48-05:00",
                          "updated_at": "2025-01-02T11:26:48-05:00",
                          "first_name": "Bob",
                          "last_name": "Norman",
                          "orders_count": 1,
                          "state": "disabled",
                          "total_spent": "199.65",
                          "last_order_id": 450789469,
                          "note": null,
                          "verified_email": true,
                          "multipass_identifier": null,
                          "tax_exempt": false,
                          "tags": "Léon, Noël",
                          "last_order_name": "#1001",
                          "currency": "USD",
                          "phone": "+16136120707",
                          "addresses": [
                            {
                              "id": 207119551,
                              "customer_id": 207119551,
                              "first_name": null,
                              "last_name": null,
                              "company": null,
                              "address1": "Chestnut Street 92",
                              "address2": "",
                              "city": "Louisville",
                              "province": "Kentucky",
                              "country": "United States",
                              "zip": "40202",
                              "phone": "555-625-1199",
                              "name": "",
                              "province_code": "KY",
                              "country_code": "US",
                              "country_name": "United States",
                              "default": true
                            }
                          ],
                          "tax_exemptions": [],
                          "email_marketing_consent": {
                            "state": "not_subscribed",
                            "opt_in_level": null,
                            "consent_updated_at": "2004-06-13T11:57:11-04:00"
                          },
                          "sms_marketing_consent": {
                            "state": "not_subscribed",
                            "opt_in_level": "single_opt_in",
                            "consent_updated_at": "2024-01-01T07:00:00-05:00",
                            "consent_collected_from": "OTHER"
                          },
                          "admin_graphql_api_id": "gid://shopify/Customer/207119551",
                          "default_address": {
                            "id": 207119551,
                            "customer_id": 207119551,
                            "first_name": null,
                            "last_name": null,
                            "company": null,
                            "address1": "Chestnut Street 92",
                            "address2": "",
                            "city": "Louisville",
                            "province": "Kentucky",
                            "country": "United States",
                            "zip": "40202",
                            "phone": "555-625-1199",
                            "name": "",
                            "province_code": "KY",
                            "country_code": "US",
                            "country_name": "United States",
                            "default": true
                          }
                        }
                      ]
                    }
                  },
                  "Report": {
                    "TraceId": "00-3c6a96b919427b0952ba274800a4b04f-7efc4603f4ee42e7-00",
                    "TotalExtResourcesDuration": 356.8311,
                    "TotalEventsTransitDuration": 554.5615,
                    "TotalTransformationsDuration": 690.4757,
                    "TotalRequestsDuration": 4296.1973,
                    "ExtResources": [
                      {
                        "Uri": "https://quickstart.myshopify.com/admin/api/2025-01/customers.json",
                        "Duration": 356.8311
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "kariz_core_api"
            ]
          }
        ]
      }
    },
    "/api/KarizClientApp/Unified/Fulfillments": {
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "List all Fulfillments",
        "description": "Retrieves fulfillments associated with an order.\n\nThe response is compatible with the Shopify REST API fulfillment schema. For detailed schema explanations, see the [Shopify REST API fulfillment resource]([https://shopify.dev/docs/api/admin-rest/2025-01/resources/fulfillment]).",
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "Specify the sales channel from which to fetch user data. Each request can only retrieve data from a single channel at a time. Since requests are processed in real-time, response times vary depending on the sales channel’s speed",
            "schema": {
              "type": "string",
              "enum": [
                "amazon",
                "bigcommerce",
                "bol",
                "lightspeed_c",
                "shopify",
                "woocommerce",
                "mirakl",
                "magento",
                "bigcommerce"
              ]
            },
            "required": true
          },
          {
            "name": "tpUserId",
            "in": "query",
            "description": "The ID of your user(must be authenticated with target channels).",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "completionCallbackUrl",
            "in": "query",
            "description": "To receive the completion event. You can use a webhook to find out whether the task is finished.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The supported parameters to query the data depend on the channels API. Supported channels shows which parameters can be used for which channels.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetFulfillmentBody"
                  },
                  {
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ShopifyBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/WoocommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/AmazonBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BolBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/LightspeedCBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BigCommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/MiraklBodyParams"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Shopify": {
                  "summary": "Example with Shopify configuration.",
                  "value": {
                    "params": {
                      "shopify": [
                        {
                          "key": "baseUrl",
                          "value": "your-shop.myshopify.com"
                        },
                        {
                          "key": "token",
                          "value": "your-shopify-oauth-token"
                        }
                      ]
                    },
                    "order_id": "ORDER-4567",
                    "created_at_max": "2024-03-10T10:00:00-07:00",
                    "created_at_min": "2024-03-01T09:00:00-07:00",
                    "fields": "id,order_id,created_at,status",
                    "limit": 100,
                    "since_id": 123456,
                    "updated_at_max": "2024-03-11T12:00:00-07:00",
                    "updated_at_min": "2024-03-05T14:00:00-07:00"
                  }
                },
                "Lightspeed-C": {
                  "summary": "Example with Lightspeed C configuration.",
                  "value": {
                    "params": {
                      "lightspeed_c": [
                        {
                          "key": "region",
                          "value": "nl"
                        },
                        {
                          "key": "token",
                          "value": "Basic eHh4eHh4"
                        }
                      ]
                    },
                    "order_id": "ORDER-4567",
                    "created_at_max": "2024-03-10T10:00:00-07:00",
                    "created_at_min": "2024-03-01T09:00:00-07:00",
                    "fields": "id,order_id,created_at,status",
                    "limit": 100,
                    "since_id": 123456,
                    "updated_at_max": "2024-03-11T12:00:00-07:00",
                    "updated_at_min": "2024-03-05T14:00:00-07:00"
                  }
                },
                "Bigcommerce": {
                  "summary": "Example with Bigcommerce configuration.",
                  "value": {
                    "params": {
                      "bigcommerce": [
                        {
                          "key": "store_hash",
                          "value": "store hash"
                        },
                        {
                          "key": "token",
                          "value": "store token"
                        }
                      ]
                    },
                    "order_id": "ORDER-4567",
                    "created_at_max": "2024-03-10T10:00:00-07:00",
                    "created_at_min": "2024-03-01T09:00:00-07:00",
                    "fields": "id,order_id,created_at,status",
                    "limit": 100,
                    "since_id": 123456,
                    "updated_at_max": "2024-03-11T12:00:00-07:00",
                    "updated_at_min": "2024-03-05T14:00:00-07:00"
                  }
                },
                "Woocommerce": {
                  "summary": "Example with Woocommerce configuration.",
                  "value": {
                    "params": {
                      "woocommerce": [
                        {
                          "key": "baseUrl",
                          "value": "https://domain.com/wordpress"
                        },
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "order_id": "ORDER-4567",
                    "created_at_max": "2024-03-10T10:00:00-07:00",
                    "created_at_min": "2024-03-01T09:00:00-07:00",
                    "fields": "id,order_id,created_at,status",
                    "limit": 100,
                    "since_id": 123456,
                    "updated_at_max": "2024-03-11T12:00:00-07:00",
                    "updated_at_min": "2024-03-05T14:00:00-07:00"
                  }
                },
                "Amazon": {
                  "summary": "Example with Amazon configuration.",
                  "value": {
                    "params": {
                      "amazon": [
                        {
                          "key": "endpoint",
                          "value": "https://sellingpartnerapi-eu.amazon.com"
                        },
                        {
                          "key": "marketplaceIds",
                          "value": [
                            "A1805IZSGTT6HS",
                            "A1PA6795UKMFR9"
                          ]
                        },
                        {
                          "key": "token",
                          "value": "oauth token"
                        }
                      ]
                    },
                    "order_id": "ORDER-4567",
                    "created_at_max": "2024-03-10T10:00:00-07:00",
                    "created_at_min": "2024-03-01T09:00:00-07:00",
                    "fields": "id,order_id,created_at,status",
                    "limit": 100,
                    "since_id": 123456,
                    "updated_at_max": "2024-03-11T12:00:00-07:00",
                    "updated_at_min": "2024-03-05T14:00:00-07:00"
                  }
                },
                "Bol": {
                  "summary": "Example with Bol configuration.",
                  "value": {
                    "params": {
                      "bol": [
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "order_id": "ORDER-4567",
                    "created_at_max": "2024-03-10T10:00:00-07:00",
                    "created_at_min": "2024-03-01T09:00:00-07:00",
                    "fields": "id,order_id,created_at,status",
                    "limit": 100,
                    "since_id": 123456,
                    "updated_at_max": "2024-03-11T12:00:00-07:00",
                    "updated_at_min": "2024-03-05T14:00:00-07:00"
                  }
                },
                "Mirakl": {
                  "summary": "Example with Mirakl configuration.",
                  "value": {
                    "params": {
                      "mirakl": [
                        {
                          "key": "token",
                          "value": "bearer-token"
                        }
                      ]
                    },
                    "order_id": "ORDER-4567",
                    "created_at_max": "2024-03-10T10:00:00-07:00",
                    "created_at_min": "2024-03-01T09:00:00-07:00",
                    "fields": "id,order_id,created_at,status",
                    "limit": 100,
                    "since_id": 123456,
                    "updated_at_max": "2024-03-11T12:00:00-07:00",
                    "updated_at_min": "2024-03-05T14:00:00-07:00"
                  }
                },
                "Magento": {
                  "summary": "Example with Magento configuration.",
                  "value": {
                    "params": {
                      "magento": [
                        {
                          "key": "baseUrl",
                          "value": "https://your-magento-store.com"
                        },
                        {
                          "key": "token",
                          "value": "token"
                        }
                      ]
                    },
                    "order_id": "ORDER-4567",
                    "created_at_max": "2024-03-10T10:00:00-07:00",
                    "created_at_min": "2024-03-01T09:00:00-07:00",
                    "fields": "id,order_id,created_at,status",
                    "limit": 100,
                    "since_id": 123456,
                    "updated_at_max": "2024-03-11T12:00:00-07:00",
                    "updated_at_min": "2024-03-05T14:00:00-07:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /Unified/Fulfillments Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfillmentResponseWrapper"
                },
                "example": {
                  "Errors": {},
                  "Output": {
                    "step": "transform",
                    "isSuccess": true,
                    "schemaValidationErrors": null,
                    "restErrors": null,
                    "operationErrors": null,
                    "unexpectedErrors": null,
                    "execution_id": "ed7ad663-4757-447c-b5cd-1e83c2380afc",
                    "override_count": 1,
                    "next_page_token_url": "https://api.trykariz.com/api/KarizClientApp/RunSync?configName=shopify_get_orders&tpUserId=1&data=%7B%22limit%22%3A1%2C%22next_page_token%22%3A%22eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0%22%7D",
                    "next_page_token": "eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0",
                    "result": {
                      "fulfillments": [
                        {
                          "id": 255858046,
                          "order_id": 450789469,
                          "status": "failure",
                          "created_at": "2025-01-02T11:38:15-05:00",
                          "service": "manual",
                          "updated_at": "2025-01-02T11:38:15-05:00",
                          "tracking_company": "USPS",
                          "shipment_status": null,
                          "location_id": 655441491,
                          "origin_address": null,
                          "line_items": [
                            {
                              "id": 466157049,
                              "variant_id": 39072856,
                              "title": "IPod Nano - 8gb",
                              "quantity": 1,
                              "sku": "IPOD2008GREEN",
                              "variant_title": "green",
                              "vendor": null,
                              "fulfillment_service": "manual",
                              "product_id": 632910392,
                              "requires_shipping": true,
                              "taxable": true,
                              "gift_card": false,
                              "name": "IPod Nano - 8gb - green",
                              "variant_inventory_management": "shopify",
                              "properties": [
                                {
                                  "name": "Custom Engraving Front",
                                  "value": "Happy Birthday"
                                },
                                {
                                  "name": "Custom Engraving Back",
                                  "value": "Merry Christmas"
                                }
                              ],
                              "product_exists": true,
                              "fulfillable_quantity": 0,
                              "grams": 200,
                              "price": "199.00",
                              "total_discount": "0.00",
                              "fulfillment_status": null,
                              "price_set": {
                                "shop_money": {
                                  "amount": "199.00",
                                  "currency_code": "USD"
                                },
                                "presentment_money": {
                                  "amount": "199.00",
                                  "currency_code": "USD"
                                }
                              },
                              "total_discount_set": {
                                "shop_money": {
                                  "amount": "0.00",
                                  "currency_code": "USD"
                                },
                                "presentment_money": {
                                  "amount": "0.00",
                                  "currency_code": "USD"
                                }
                              },
                              "discount_allocations": [
                                {
                                  "amount": "3.34",
                                  "discount_application_index": 0,
                                  "amount_set": {
                                    "shop_money": {
                                      "amount": "3.34",
                                      "currency_code": "USD"
                                    },
                                    "presentment_money": {
                                      "amount": "3.34",
                                      "currency_code": "USD"
                                    }
                                  }
                                }
                              ],
                              "admin_graphql_api_id": "gid://shopify/LineItem/466157049",
                              "duties": [],
                              "tax_lines": [
                                {
                                  "price": "3.98",
                                  "rate": 0.06,
                                  "title": "State Tax",
                                  "price_set": {
                                    "shop_money": {
                                      "amount": "3.98",
                                      "currency_code": "USD"
                                    },
                                    "presentment_money": {
                                      "amount": "3.98",
                                      "currency_code": "USD"
                                    }
                                  },
                                  "channel_liable": null
                                }
                              ],
                              "fulfillment_line_item_id": 225088298
                            }
                          ],
                          "tracking_number": "1Z1234512345123456",
                          "tracking_numbers": [
                            "1Z1234512345123456"
                          ],
                          "tracking_url": "https://tools.usps.com/go/TrackConfirmAction_input?qtc_tLabels1=1Z1234512345123456",
                          "tracking_urls": [
                            "https://tools.usps.com/go/TrackConfirmAction_input?qtc_tLabels1=1Z1234512345123456"
                          ],
                          "receipt": {
                            "testcase": true,
                            "authorization": "123456"
                          },
                          "name": "#1001.0",
                          "admin_graphql_api_id": "gid://shopify/Fulfillment/255858046"
                        }
                      ]
                    }
                  },
                  "Report": {
                    "TraceId": "00-3c6a96b919427b0952ba274800a4b04f-7efc4603f4ee42e7-00",
                    "TotalExtResourcesDuration": 356.8311,
                    "TotalEventsTransitDuration": 554.5615,
                    "TotalTransformationsDuration": 690.4757,
                    "TotalRequestsDuration": 4296.1973,
                    "ExtResources": [
                      {
                        "Uri": "https://quickstart.myshopify.com/admin/api/2025-01/fulfillments.json",
                        "Duration": 356.8311
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "kariz_core_api"
            ]
          }
        ]
      }
    },
    "/api/KarizClientApp/Unified/Inventory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "List all inventory levels",
        "description": "Retrieves a list of inventory levels.\n\nProviding all this data in a single response simplifies inventory management integrations. The response is compatible with the Shopify REST API InventoryLevel schema. For detailed schema explanations, see the [Shopify REST API InventoryLevel resource]([https://shopify.dev/docs/api/admin-rest/2025-01/resources/inventorylevel]).",
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "Specify the sales channel from which to fetch user data. Each request can only retrieve data from a single channel at a time. Since requests are processed in real-time, response times vary depending on the sales channel’s speed",
            "schema": {
              "type": "string",
              "enum": [
                "amazon",
                "bigcommerce",
                "bol",
                "lightspeed_c",
                "shopify",
                "woocommerce",
                "mirakl",
                "magento",
                "bigcommerce"
              ]
            },
            "required": true
          },
          {
            "name": "tpUserId",
            "in": "query",
            "description": "The ID of your user(must be authenticated with target channels).",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "completionCallbackUrl",
            "in": "query",
            "description": "To receive the completion event. You can use a webhook to find out whether the task is finished.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The supported parameters to query the data depend on the channels API. Supported channels shows which parameters can be used for which channels.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetInventoryBody"
                  },
                  {
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ShopifyBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/WoocommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/AmazonBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BolBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/LightspeedCBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BigCommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/MiraklBodyParams"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Shopify": {
                  "summary": "Example with Shopify configuration.",
                  "value": {
                    "params": {
                      "shopify": [
                        {
                          "key": "baseUrl",
                          "value": "your-shop.myshopify.com"
                        },
                        {
                          "key": "token",
                          "value": "your-shopify-oauth-token"
                        }
                      ]
                    },
                    "inventory_item_ids": "808950810,457924702,908978021",
                    "limit": 100,
                    "location_ids": "655441491,487838322",
                    "updated_at_min": "2023-11-01T08:30:00-05:00"
                  }
                },
                "Lightspeed-C": {
                  "summary": "Example with Lightspeed C configuration.",
                  "value": {
                    "params": {
                      "lightspeed_c": [
                        {
                          "key": "region",
                          "value": "nl"
                        },
                        {
                          "key": "token",
                          "value": "Basic eHh4eHh4"
                        }
                      ]
                    },
                    "inventory_item_ids": "808950810,457924702,908978021",
                    "limit": 100,
                    "location_ids": "655441491,487838322",
                    "updated_at_min": "2023-11-01T08:30:00-05:00"
                  }
                },
                "Bigcommerce": {
                  "summary": "Example with Bigcommerce configuration.",
                  "value": {
                    "params": {
                      "bigcommerce": [
                        {
                          "key": "store_hash",
                          "value": "store hash"
                        },
                        {
                          "key": "token",
                          "value": "store token"
                        }
                      ]
                    },
                    "inventory_item_ids": "808950810,457924702,908978021",
                    "limit": 100,
                    "location_ids": "655441491,487838322",
                    "updated_at_min": "2023-11-01T08:30:00-05:00"
                  }
                },
                "Woocommerce": {
                  "summary": "Example with Woocommerce configuration.",
                  "value": {
                    "params": {
                      "woocommerce": [
                        {
                          "key": "baseUrl",
                          "value": "https://domain.com/wordpress"
                        },
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "inventory_item_ids": "808950810,457924702,908978021",
                    "limit": 100,
                    "location_ids": "655441491,487838322",
                    "updated_at_min": "2023-11-01T08:30:00-05:00"
                  }
                },
                "Amazon": {
                  "summary": "Example with Amazon configuration.",
                  "value": {
                    "params": {
                      "amazon": [
                        {
                          "key": "endpoint",
                          "value": "https://sellingpartnerapi-eu.amazon.com"
                        },
                        {
                          "key": "marketplaceIds",
                          "value": [
                            "A1805IZSGTT6HS",
                            "A1PA6795UKMFR9"
                          ]
                        },
                        {
                          "key": "token",
                          "value": "oauth token"
                        }
                      ]
                    },
                    "inventory_item_ids": "808950810,457924702,908978021",
                    "limit": 100,
                    "location_ids": "655441491,487838322",
                    "updated_at_min": "2023-11-01T08:30:00-05:00"
                  }
                },
                "Bol": {
                  "summary": "Example with Bol configuration.",
                  "value": {
                    "params": {
                      "bol": [
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "inventory_item_ids": "808950810,457924702,908978021",
                    "limit": 100,
                    "location_ids": "655441491,487838322",
                    "updated_at_min": "2023-11-01T08:30:00-05:00"
                  }
                },
                "Mirakl": {
                  "summary": "Example with Mirakl configuration.",
                  "value": {
                    "params": {
                      "mirakl": [
                        {
                          "key": "token",
                          "value": "bearer-token"
                        }
                      ]
                    },
                    "inventory_item_ids": "808950810,457924702,908978021",
                    "limit": 100,
                    "location_ids": "655441491,487838322",
                    "updated_at_min": "2023-11-01T08:30:00-05:00"
                  }
                },
                "Magento": {
                  "summary": "Example with Magento configuration.",
                  "value": {
                    "params": {
                      "magento": [
                        {
                          "key": "baseUrl",
                          "value": "https://your-magento-store.com"
                        },
                        {
                          "key": "token",
                          "value": "token"
                        }
                      ]
                    },
                    "inventory_item_ids": "808950810,457924702,908978021",
                    "limit": 100,
                    "location_ids": "655441491,487838322",
                    "updated_at_min": "2023-11-01T08:30:00-05:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /Unified/Inventory Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponseWrapper"
                },
                "example": {
                  "Errors": {},
                  "Output": {
                    "step": "transform",
                    "isSuccess": true,
                    "schemaValidationErrors": null,
                    "restErrors": null,
                    "operationErrors": null,
                    "unexpectedErrors": null,
                    "execution_id": "ed7ad663-4757-447c-b5cd-1e83c2380afc",
                    "override_count": 1,
                    "next_page_token_url": "https://api.trykariz.com/api/KarizClientApp/RunSync?configName=shopify_get_orders&tpUserId=1&data=%7B%22limit%22%3A1%2C%22next_page_token%22%3A%22eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0%22%7D",
                    "next_page_token": "eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0",
                    "result": {
                      "inventory_levels": [
                        {
                          "inventory_item_id": 49148385,
                          "location_id": 655441491,
                          "available": 2,
                          "updated_at": "2025-01-08T16:01:01-05:00",
                          "admin_graphql_api_id": "gid://shopify/InventoryLevel/655441491?inventory_item_id=49148385"
                        },
                        {
                          "inventory_item_id": 808950810,
                          "location_id": 655441491,
                          "available": 1,
                          "updated_at": "2025-01-08T16:01:01-05:00",
                          "admin_graphql_api_id": "gid://shopify/InventoryLevel/655441491?inventory_item_id=808950810"
                        },
                        {
                          "inventory_item_id": 457924702,
                          "location_id": 655441491,
                          "available": 4,
                          "updated_at": "2025-01-08T16:01:01-05:00",
                          "admin_graphql_api_id": "gid://shopify/InventoryLevel/655441491?inventory_item_id=457924702"
                        },
                        {
                          "inventory_item_id": 39072856,
                          "location_id": 655441491,
                          "available": 3,
                          "updated_at": "2025-01-08T16:01:01-05:00",
                          "admin_graphql_api_id": "gid://shopify/InventoryLevel/655441491?inventory_item_id=39072856"
                        }
                      ]
                    }
                  },
                  "Report": {
                    "TraceId": "00-3c6a96b919427b0952ba274800a4b04f-7efc4603f4ee42e7-00",
                    "TotalExtResourcesDuration": 356.8311,
                    "TotalEventsTransitDuration": 554.5615,
                    "TotalTransformationsDuration": 690.4757,
                    "TotalRequestsDuration": 4296.1973,
                    "ExtResources": [
                      {
                        "Uri": "https://quickstart.myshopify.com/admin/api/2025-01/inventory_levels.json",
                        "Duration": 356.8311
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "kariz_core_api"
            ]
          }
        ]
      }
    },
    "/api/KarizClientApp/Unified/Orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "List all order info",
        "description": "Retrieves a list of orders, including **all** associated data, containing:\n\n*   **Full Order Details:** All standard order information (customer, billing, shipping, etc.).\n*   **Line Items:** Complete line item information.\n*   **Fulfillments:** Details order fulfillments and tracking.\n*   **Returns:** Any returned items associated with the order.\n\nProviding all this data in a single response simplifies order management integrations. The response is compatible with the Shopify REST API order schema. For detailed schema explanations, see the [Shopify REST API Order resource]([https://shopify.dev/docs/api/admin-rest/2024-10/resources/order]).",
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "Specify the sales channel from which to fetch user data. Each request can only retrieve data from a single channel at a time. Since requests are processed in real-time, response times vary depending on the sales channel’s speed",
            "schema": {
              "type": "string",
              "enum": [
                "amazon",
                "bigcommerce",
                "bol",
                "lightspeed_c",
                "shopify",
                "woocommerce",
                "mirakl",
                "magento",
                "bigcommerce"
              ]
            },
            "required": true
          },
          {
            "name": "tpUserId",
            "in": "query",
            "description": "The ID of your user(must be authenticated with target channels).",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "completionCallbackUrl",
            "in": "query",
            "description": "To receive the completion event. You can use a webhook to find out whether the task is finished.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The supported parameters to query the data depend on the channels API. Supported channels shows which parameters can be used for which channels.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetOrdersBody"
                  },
                  {
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ShopifyBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/WoocommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/AmazonBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BolBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/LightspeedCBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BigCommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/MiraklBodyParams"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Shopify": {
                  "summary": "Example with Shopify configuration.",
                  "value": {
                    "params": {
                      "shopify": [
                        {
                          "key": "baseUrl",
                          "value": "your-shop.myshopify.com"
                        },
                        {
                          "key": "token",
                          "value": "your-shopify-oauth-token"
                        }
                      ]
                    },
                    "api_version": "1",
                    "attribution_app_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "financial_status": "paid",
                    "fulfillment_status": "shipped",
                    "ids": "1,2",
                    "limit": 10,
                    "processed_at_max": "1948-06-08T07:16:01.0Z",
                    "processed_at_min": "1948-06-08T07:16:01.0Z",
                    "since_id": "1",
                    "status": "any",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1939-08-05T01:34:33.0Z"
                  }
                },
                "Lightspeed-C": {
                  "summary": "Example with Lightspeed C configuration.",
                  "value": {
                    "params": {
                      "lightspeed_c": [
                        {
                          "key": "region",
                          "value": "nl"
                        },
                        {
                          "key": "token",
                          "value": "Basic eHh4eHh4"
                        }
                      ]
                    },
                    "api_version": "1",
                    "attribution_app_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "financial_status": "paid",
                    "fulfillment_status": "shipped",
                    "ids": "1,2",
                    "limit": 10,
                    "processed_at_max": "1948-06-08T07:16:01.0Z",
                    "processed_at_min": "1948-06-08T07:16:01.0Z",
                    "since_id": "1",
                    "status": "any",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1939-08-05T01:34:33.0Z"
                  }
                },
                "Bigcommerce": {
                  "summary": "Example with Bigcommerce configuration.",
                  "value": {
                    "params": {
                      "bigcommerce": [
                        {
                          "key": "store_hash",
                          "value": "store hash"
                        },
                        {
                          "key": "token",
                          "value": "store token"
                        }
                      ]
                    },
                    "api_version": "1",
                    "attribution_app_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "financial_status": "paid",
                    "fulfillment_status": "shipped",
                    "ids": "1,2",
                    "limit": 10,
                    "processed_at_max": "1948-06-08T07:16:01.0Z",
                    "processed_at_min": "1948-06-08T07:16:01.0Z",
                    "since_id": "1",
                    "status": "any",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1939-08-05T01:34:33.0Z"
                  }
                },
                "Woocommerce": {
                  "summary": "Example with Woocommerce configuration.",
                  "value": {
                    "params": {
                      "woocommerce": [
                        {
                          "key": "baseUrl",
                          "value": "https://domain.com/wordpress"
                        },
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "api_version": "1",
                    "attribution_app_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "financial_status": "paid",
                    "fulfillment_status": "shipped",
                    "ids": "1,2",
                    "limit": 10,
                    "processed_at_max": "1948-06-08T07:16:01.0Z",
                    "processed_at_min": "1948-06-08T07:16:01.0Z",
                    "since_id": "1",
                    "status": "any",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1939-08-05T01:34:33.0Z"
                  }
                },
                "Amazon": {
                  "summary": "Example with Amazon configuration.",
                  "value": {
                    "params": {
                      "amazon": [
                        {
                          "key": "endpoint",
                          "value": "https://sellingpartnerapi-eu.amazon.com"
                        },
                        {
                          "key": "marketplaceIds",
                          "value": [
                            "A1805IZSGTT6HS",
                            "A1PA6795UKMFR9"
                          ]
                        },
                        {
                          "key": "token",
                          "value": "oauth token"
                        }
                      ]
                    },
                    "api_version": "1",
                    "attribution_app_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "financial_status": "paid",
                    "fulfillment_status": "shipped",
                    "ids": "1,2",
                    "limit": 10,
                    "processed_at_max": "1948-06-08T07:16:01.0Z",
                    "processed_at_min": "1948-06-08T07:16:01.0Z",
                    "since_id": "1",
                    "status": "any",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1939-08-05T01:34:33.0Z"
                  }
                },
                "Bol": {
                  "summary": "Example with Bol configuration.",
                  "value": {
                    "params": {
                      "bol": [
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "api_version": "1",
                    "attribution_app_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "financial_status": "paid",
                    "fulfillment_status": "shipped",
                    "ids": "1,2",
                    "limit": 10,
                    "processed_at_max": "1948-06-08T07:16:01.0Z",
                    "processed_at_min": "1948-06-08T07:16:01.0Z",
                    "since_id": "1",
                    "status": "any",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1939-08-05T01:34:33.0Z"
                  }
                },
                "Mirakl": {
                  "summary": "Example with Mirakl configuration.",
                  "value": {
                    "params": {
                      "mirakl": [
                        {
                          "key": "token",
                          "value": "bearer-token"
                        }
                      ]
                    },
                    "value": {
                      "params": {
                        "magento": [
                          {
                            "key": "baseUrl",
                            "value": "https://your-magento-store.com"
                          },
                          {
                            "key": "token",
                            "value": "token"
                          }
                        ]
                      },
                      "collection_id": "1",
                      "handle": "handle",
                      "ids": "1,2",
                      "limit": 10,
                      "since_id": "1",
                      "title": "title"
                    },
                    "fulfillment_status": "shipped",
                    "ids": "1,2",
                    "limit": 10,
                    "status": "any",
                    "updated_at_min": "1939-08-05T01:34:33.0Z"
                  }
                },
                "Magento": {
                  "summary": "Example with Magento configuration.",
                  "value": {
                    "params": {
                      "magento": [
                        {
                          "key": "baseUrl",
                          "value": "https://your-magento-store.com"
                        },
                        {
                          "key": "token",
                          "value": "token"
                        }
                      ]
                    },
                    "attribution_app_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "financial_status": "paid",
                    "fulfillment_status": "shipped",
                    "ids": "1,2",
                    "limit": 10,
                    "since_id": "1",
                    "status": "any",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1939-08-05T01:34:33.0Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /Unified/Orders Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseWrapper"
                },
                "example": {
                  "Errors": {},
                  "Output": {
                    "step": "transform",
                    "isSuccess": true,
                    "schemaValidationErrors": null,
                    "restErrors": null,
                    "operationErrors": null,
                    "unexpectedErrors": null,
                    "execution_id": "ed7ad663-4757-447c-b5cd-1e83c2380afc",
                    "override_count": 1,
                    "next_page_token_url": "https://api.trykariz.com/api/KarizClientApp/RunSync?configName=shopify_get_orders&tpUserId=1&data=%7B%22limit%22%3A1%2C%22next_page_token%22%3A%22eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0%22%7D",
                    "next_page_token": "eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0",
                    "result": [
                      {
                        "id": "5954461335827",
                        "channel_name": "shopify",
                        "app_id": "1354745",
                        "billing_address": {
                          "id": null,
                          "channel_name": "shopify",
                          "address1": "address1",
                          "address2": "E",
                          "city": "Amsterdam",
                          "company": "Kariz",
                          "country": "Netherlands",
                          "country_code": "NL",
                          "first_name": "first_name",
                          "last_name": "last_name",
                          "name": "name",
                          "phone": "+31629362580",
                          "province": null,
                          "province_code": null,
                          "zip": "2311 EA"
                        },
                        "buyer_accepts_marketing": true,
                        "cancel_reason": null,
                        "cancelled_at": null,
                        "checkout_id": "38277296718099",
                        "closed_at": null,
                        "confirmed": true,
                        "created_at": "2024-09-13T14:47:13+00:00",
                        "currency": "EUR",
                        "customer": {
                          "id": "8430809743635",
                          "created_at": "2024-09-13T14:43:08+00:00",
                          "default_address": {
                            "id": "10229148320019",
                            "address1": "address1",
                            "address2": "E",
                            "city": "Amsterdam",
                            "company": "Kariz",
                            "country": "Netherlands",
                            "country_code": "NL",
                            "country_name": "Netherlands",
                            "default": true,
                            "first_name": "first_name",
                            "last_name": "last_name",
                            "name": "name",
                            "phone": "phone",
                            "province": null,
                            "province_code": null,
                            "zip": "zip"
                          },
                          "email": "h.sarlak20@gmail.com",
                          "first_name": "first_name",
                          "last_name": "last_name",
                          "note": null,
                          "phone": null,
                          "tags": "",
                          "tax_exempt": false,
                          "tax_exemptions": [],
                          "updated_at": "2024-09-13T14:47:13+00:00",
                          "verified_email": true,
                          "sms_marketing_consent": {},
                          "email_marketing_consent": {
                            "state": "subscribed",
                            "opt_in_level": "single_opt_in",
                            "consent_updated_at": "2024-09-13T14:43:08+00:00"
                          }
                        },
                        "customer_locale": "en",
                        "device_id": null,
                        "discount_codes": [
                          {
                            "id": null,
                            "amount": "4.95",
                            "code": "FREESHIPPING2024",
                            "type": "shipping"
                          }
                        ],
                        "discount_applications": [
                          {
                            "type": "discount_code",
                            "code": "FREESHIPPING2024",
                            "value": "100.0",
                            "value_type": "percentage",
                            "allocation_method": "each",
                            "target_selection": "all",
                            "target_type": "shipping_line"
                          }
                        ],
                        "email": "h.sarlak20@gmail.com",
                        "financial_status": "paid",
                        "fulfillment_status": null,
                        "phone": null,
                        "tags": "",
                        "line_items": [
                          {
                            "id": "15101787734291",
                            "fulfillable_quantity": 1,
                            "fulfillment_service": "manual",
                            "fulfillment_status": null,
                            "grams": 57,
                            "price": "24.95",
                            "product_id": "9193872326931",
                            "quantity": 1,
                            "requires_shipping": true,
                            "sku": "",
                            "title": "Selling Plans Ski Wax",
                            "variant_id": "48467551420691",
                            "variant_title": "Selling Plans Ski Wax",
                            "name": "Selling Plans Ski Wax - Selling Plans Ski Wax",
                            "vendor": "Quickstart (5676026b)",
                            "gift_card": false,
                            "taxable": true,
                            "total_discount": "0.00",
                            "total_discount_set": {
                              "shop_money": {
                                "currency_code": "EUR",
                                "amount": "0.00"
                              },
                              "presentment_money": {
                                "currency_code": "EUR",
                                "amount": "0.00"
                              }
                            },
                            "product_exists": true,
                            "price_set": {
                              "shop_money": {
                                "currency_code": "EUR",
                                "amount": "24.95"
                              },
                              "presentment_money": {
                                "currency_code": "EUR",
                                "amount": "24.95"
                              }
                            },
                            "fulfillment_line_item_id": null
                          },
                          {
                            "id": "15101787767059",
                            "fulfillable_quantity": 1,
                            "fulfillment_service": "manual",
                            "fulfillment_status": null,
                            "grams": 71,
                            "price": "49.95",
                            "product_id": "9193872326931",
                            "quantity": 1,
                            "requires_shipping": true,
                            "sku": "",
                            "title": "Selling Plans Ski Wax",
                            "variant_id": "48467551453459",
                            "variant_title": "Special Selling Plans Ski Wax",
                            "name": "Selling Plans Ski Wax - Special Selling Plans Ski Wax",
                            "vendor": "Quickstart (5676026b)",
                            "gift_card": false,
                            "taxable": true,
                            "total_discount": "0.00",
                            "total_discount_set": {
                              "shop_money": {
                                "currency_code": "EUR",
                                "amount": "0.00"
                              },
                              "presentment_money": {
                                "currency_code": "EUR",
                                "amount": "0.00"
                              }
                            },
                            "product_exists": true,
                            "price_set": {
                              "shop_money": {
                                "currency_code": "EUR",
                                "amount": "49.95"
                              },
                              "presentment_money": {
                                "currency_code": "EUR",
                                "amount": "49.95"
                              }
                            },
                            "fulfillment_line_item_id": null
                          },
                          {
                            "id": "15101787799827",
                            "fulfillable_quantity": 1,
                            "fulfillment_service": "manual",
                            "fulfillment_status": null,
                            "grams": 14,
                            "price": "9.95",
                            "product_id": "9193872326931",
                            "quantity": 1,
                            "requires_shipping": true,
                            "sku": "",
                            "title": "Selling Plans Ski Wax",
                            "variant_id": "48467551486227",
                            "variant_title": "Sample Selling Plans Ski Wax",
                            "name": "Selling Plans Ski Wax - Sample Selling Plans Ski Wax",
                            "vendor": "Quickstart (5676026b)",
                            "gift_card": false,
                            "taxable": true,
                            "total_discount": "0.00",
                            "total_discount_set": {
                              "shop_money": {
                                "currency_code": "EUR",
                                "amount": "0.00"
                              },
                              "presentment_money": {
                                "currency_code": "EUR",
                                "amount": "0.00"
                              }
                            },
                            "product_exists": true,
                            "price_set": {
                              "shop_money": {
                                "currency_code": "EUR",
                                "amount": "9.95"
                              },
                              "presentment_money": {
                                "currency_code": "EUR",
                                "amount": "9.95"
                              }
                            },
                            "fulfillment_line_item_id": null
                          }
                        ],
                        "location_id": null,
                        "name": "#1004",
                        "note": null,
                        "number": "4",
                        "order_number": "1004",
                        "order_status_url": "https://quickstart-5676026b.myshopify.com/87012344083/orders/9f3c5659f7a47af9c3e32fc46ef0948f/authenticate?key=99cb5af1f58f1bcb43f592c724cbce36",
                        "payment_gateway_names": [
                          "manual"
                        ],
                        "processed_at": "2024-09-13T14:47:12+00:00",
                        "referring_site": null,
                        "shipping_address": {
                          "id": null,
                          "address1": "address1",
                          "address2": "address2",
                          "city": "Amsterdam",
                          "company": "Kariz",
                          "country": "Netherlands",
                          "country_code": "NL",
                          "first_name": "first_name",
                          "last_name": "last_name",
                          "name": "name",
                          "phone": "phone",
                          "province": null,
                          "province_code": null,
                          "zip": "zip"
                        },
                        "shipping_lines": [
                          {
                            "id": "4798704550163",
                            "carrier_identifier": "4084464f694a06e6683c491d00cef27f",
                            "code": "Standaard",
                            "is_removed": false,
                            "phone": null,
                            "price": "4.95",
                            "discounted_price": "4.95",
                            "discount_allocations": [
                              {
                                "amount": "4.95",
                                "discount_application_index": 0,
                                "amount_set": {
                                  "shop_money": {
                                    "currency_code": "EUR",
                                    "amount": "4.95"
                                  },
                                  "presentment_money": {
                                    "currency_code": "EUR",
                                    "amount": "4.95"
                                  }
                                }
                              }
                            ],
                            "source": "shopify",
                            "title": "Standaard",
                            "price_set": {
                              "shop_money": {
                                "currency_code": "EUR",
                                "amount": "4.95"
                              },
                              "presentment_money": {
                                "currency_code": "EUR",
                                "amount": "4.95"
                              }
                            },
                            "discounted_price_set": {
                              "shop_money": {
                                "currency_code": "EUR",
                                "amount": "4.95"
                              },
                              "presentment_money": {
                                "currency_code": "EUR",
                                "amount": "4.95"
                              }
                            }
                          }
                        ],
                        "source_identifier": "9eb0dba16b98dda9011517e5880b0263",
                        "source_name": "shopify_draft_order",
                        "subtotal_price": "84.85",
                        "taxes_included": true,
                        "test": false,
                        "total_discounts": "4.95",
                        "total_line_items_price": "84.85",
                        "total_tip_received": "0.00",
                        "total_price": "84.85",
                        "total_tax": "0.00",
                        "total_weight": 142,
                        "updated_at": "2024-09-13T14:47:14+00:00",
                        "user_id": "109876314387",
                        "current_total_duties_set": {},
                        "original_total_duties_set": {},
                        "presentment_currency": "EUR",
                        "total_line_items_price_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          }
                        },
                        "total_discounts_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "4.95"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "4.95"
                          }
                        },
                        "total_shipping_price_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "4.95"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "4.95"
                          }
                        },
                        "subtotal_price_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          }
                        },
                        "total_price_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          }
                        },
                        "total_outstanding": "0.00",
                        "total_tax_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "0.00"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "0.00"
                          }
                        },
                        "estimated_taxes": false,
                        "current_subtotal_price": "84.85",
                        "current_subtotal_price_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          }
                        },
                        "current_total_discounts": "4.95",
                        "current_total_discounts_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "4.95"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "4.95"
                          }
                        },
                        "current_total_price": "84.85",
                        "current_total_price_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "84.85"
                          }
                        },
                        "current_total_tax": "0.00",
                        "current_total_tax_set": {
                          "shop_money": {
                            "currency_code": "EUR",
                            "amount": "0.00"
                          },
                          "presentment_money": {
                            "currency_code": "EUR",
                            "amount": "0.00"
                          }
                        },
                        "payment_terms": {},
                        "current_total_additional_fees_set": {},
                        "original_total_additional_fees_set": {},
                        "po_number": null,
                        "tax_exempt": false,
                        "company": {
                          "id": null,
                          "location_id": null
                        }
                      }
                    ]
                  },
                  "Report": {
                    "TraceId": "00-3c6a96b919427b0952ba274800a4b04f-7efc4603f4ee42e7-00",
                    "TotalExtResourcesDuration": 356.8311,
                    "TotalEventsTransitDuration": 554.5615,
                    "TotalTransformationsDuration": 690.4757,
                    "TotalRequestsDuration": 4296.1973,
                    "ExtResources": [
                      {
                        "Uri": "https://quickstart.myshopify.com/admin/api/2024-04/orders.json",
                        "Duration": 356.8311
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "kariz_core_api"
            ]
          }
        ]
      }
    },
    "/api/KarizClientApp/Unified/Products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "List all product info",
        "description": "Retrieves a list of products from the seller's catalog, including **all** associated data, containing:\n\n*   **Variants:** All product variants, with their attributes (price, SKU, options, etc.).\n*   **Inventory:** inventory information for each product and variant.\n*   **Inventory Locations:**  Inventory locations at the variant level.\n\nProviding all this data in a single response simplifies product integrations. The response is compatible with the Shopify REST API product schema. For detailed schema explanations, see the [Shopify REST API Product resource]([https://shopify.dev/docs/api/admin-rest/2024-10/resources/product]).",
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "Specify the sales channel from which to fetch user data. Each request can only retrieve data from a single channel at a time. Since requests are processed in real-time, response times vary depending on the sales channel’s speed",
            "schema": {
              "type": "string",
              "enum": [
                "bigcommerce",
                "bol",
                "lightspeed_c",
                "shopify",
                "woocommerce",
                "mirakl",
                "magento",
                "bigcommerce"
              ]
            },
            "required": true
          },
          {
            "name": "tpUserId",
            "in": "query",
            "description": "The ID of the user you want to fetch the data for. The user must be authenticated to the channel you are sending the request for.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "completionCallbackUrl",
            "in": "query",
            "description": "To receive the completion event. You can use a webhook to find out whether the task is finished.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The supported parameters to query the data depend on the channels API. Supported channels shows which parameters can be used for which channels.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ShopifyBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/WoocommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/AmazonBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BolBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/LightspeedCBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BigCommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/MiraklBodyParams"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/GetProductsBody"
                  }
                ]
              },
              "examples": {
                "Shopify": {
                  "summary": "Example with Shopify configuration.",
                  "value": {
                    "params": {
                      "shopify": [
                        {
                          "key": "baseUrl",
                          "value": "your-shop.myshopify.com"
                        },
                        {
                          "key": "token",
                          "value": "your-shopify-oauth-token"
                        }
                      ]
                    },
                    "collection_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "handle": "handle",
                    "ids": "1,2",
                    "limit": 10,
                    "product_type": "1948-06-08T07:16:01.0Z",
                    "published_at_max": "1948-06-08T07:16:01.0Z",
                    "published_at_min": "1948-06-08T07:16:01.0Z",
                    "published_status": "published",
                    "since_id": "1",
                    "status": "active",
                    "title": "title",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1918-04-30T21:13:27.0Z",
                    "vendor": "vendor"
                  }
                },
                "Lightspeed-C": {
                  "summary": "Example with Lightspeed C configuration.",
                  "value": {
                    "params": {
                      "lightspeed_c": [
                        {
                          "key": "region",
                          "value": "nl"
                        },
                        {
                          "key": "token",
                          "value": "Basic eHh4eHh4"
                        }
                      ]
                    },
                    "collection_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "handle": "handle",
                    "ids": "1,2",
                    "limit": 10,
                    "product_type": "1948-06-08T07:16:01.0Z",
                    "published_at_max": "1948-06-08T07:16:01.0Z",
                    "published_at_min": "1948-06-08T07:16:01.0Z",
                    "published_status": "published",
                    "since_id": "1",
                    "status": "active",
                    "title": "title",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1918-04-30T21:13:27.0Z",
                    "vendor": "vendor"
                  }
                },
                "Bigcommerce": {
                  "summary": "Example with Bigcommerce configuration.",
                  "value": {
                    "params": {
                      "bigcommerce": [
                        {
                          "key": "store_hash",
                          "value": "store hash"
                        },
                        {
                          "key": "token",
                          "value": "store token"
                        }
                      ]
                    },
                    "collection_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "handle": "handle",
                    "ids": "1,2",
                    "limit": 10,
                    "product_type": "1948-06-08T07:16:01.0Z",
                    "published_at_max": "1948-06-08T07:16:01.0Z",
                    "published_at_min": "1948-06-08T07:16:01.0Z",
                    "published_status": "published",
                    "since_id": "1",
                    "status": "active",
                    "title": "title",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1918-04-30T21:13:27.0Z",
                    "vendor": "vendor"
                  }
                },
                "Woocommerce": {
                  "summary": "Example with Woocommerce configuration.",
                  "value": {
                    "params": {
                      "woocommerce": [
                        {
                          "key": "baseUrl",
                          "value": "https://domain.com/wordpress"
                        },
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "collection_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "handle": "handle",
                    "ids": "1,2",
                    "limit": 10,
                    "product_type": "1948-06-08T07:16:01.0Z",
                    "published_at_max": "1948-06-08T07:16:01.0Z",
                    "published_at_min": "1948-06-08T07:16:01.0Z",
                    "published_status": "published",
                    "since_id": "1",
                    "status": "active",
                    "title": "title",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1918-04-30T21:13:27.0Z",
                    "vendor": "vendor"
                  }
                },
                "Bol": {
                  "summary": "Example with Bol configuration.",
                  "value": {
                    "params": {
                      "bol": [
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "collection_id": "1",
                    "created_at_max": "1948-06-08T07:16:01.0Z",
                    "created_at_min": "1948-06-08T07:16:01.0Z",
                    "fields": "id,name",
                    "handle": "handle",
                    "ids": "1,2",
                    "limit": 10,
                    "product_type": "1948-06-08T07:16:01.0Z",
                    "published_at_max": "1948-06-08T07:16:01.0Z",
                    "published_at_min": "1948-06-08T07:16:01.0Z",
                    "published_status": "published",
                    "since_id": "1",
                    "status": "active",
                    "title": "title",
                    "updated_at_max": "1918-04-30T21:13:27.0Z",
                    "updated_at_min": "1918-04-30T21:13:27.0Z",
                    "vendor": "vendor"
                  }
                },
                "Mirakl": {
                  "summary": "Example with Mirakl configuration.",
                  "value": {
                    "params": {
                      "mirakl": [
                        {
                          "key": "token",
                          "value": "bearer-token"
                        }
                      ]
                    },
                    "limit": 10
                  }
                },
                "Magento": {
                  "summary": "Example with Magento configuration.",
                  "value": {
                    "params": {
                      "magento": [
                        {
                          "key": "baseUrl",
                          "value": "https://your-magento-store.com"
                        },
                        {
                          "key": "token",
                          "value": "token"
                        }
                      ]
                    },
                    "collection_id": "1",
                    "handle": "handle",
                    "ids": "1,2",
                    "limit": 10,
                    "since_id": "1",
                    "title": "title"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /Unified/Products Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseWrapper"
                },
                "example": {
                  "Errors": {},
                  "Output": {
                    "step": "transform",
                    "isSuccess": true,
                    "schemaValidationErrors": null,
                    "restErrors": null,
                    "operationErrors": null,
                    "unexpectedErrors": null,
                    "execution_id": "ed7ad663-4757-447c-b5cd-1e83c2380afc",
                    "override_count": 1,
                    "next_page_token_url": "https://api.trykariz.com/api/KarizClientApp/RunSync?configName=shopify_get_orders&tpUserId=1&data=%7B%22limit%22%3A1%2C%22next_page_token%22%3A%22eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0%22%7D",
                    "next_page_token": "eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0",
                    "result": [
                      {
                        "id": "9193872097555",
                        "channel_name": "lightspeed_c",
                        "title": "Gift Card",
                        "body_html": "This is a gift card for the store",
                        "vendor": "Snowboard Vendor",
                        "product_type": "",
                        "created_at": "2024-03-29T09:40:33+00:00",
                        "handle": "gift-card",
                        "updated_at": "2024-04-19T17:37:08+00:00",
                        "published_at": "2024-03-29T09:40:34+00:00",
                        "template_suffix": null,
                        "published_scope": "web",
                        "tags": "",
                        "status": "active",
                        "variants": [
                          {
                            "id": "48467551060243",
                            "product_id": "9193872097555",
                            "title": "$10",
                            "price": "10.00",
                            "position": 1,
                            "inventory_policy": "deny",
                            "compare_at_price": null,
                            "option1": "$10",
                            "option2": null,
                            "option3": null,
                            "created_at": "2024-03-29T09:40:33+00:00",
                            "updated_at": "2024-03-29T09:40:33+00:00",
                            "taxable": false,
                            "barcode": null,
                            "fulfillment_service": "gift_card",
                            "grams": 0,
                            "inventory_management": null,
                            "requires_shipping": false,
                            "sku": "",
                            "weight": 0,
                            "weight_unit": "kg",
                            "inventory_item_id": "50485600059667",
                            "inventory_quantity": 0,
                            "old_inventory_quantity": 0,
                            "image_id": null,
                            "inventory_item": {
                              "id": "50485600059667",
                              "sku": "",
                              "created_at": "2024-03-29T09:40:33+00:00",
                              "updated_at": "2024-03-29T09:40:33+00:00",
                              "requires_shipping": false,
                              "cost": null,
                              "country_code_of_origin": null,
                              "province_code_of_origin": null,
                              "harmonized_system_code": null,
                              "tracked": false,
                              "inventory_levels": [
                                {
                                  "inventory_item_id": "50485600059667",
                                  "location_id": "97423720723",
                                  "available": null,
                                  "updated_at": "2024-03-29T09:40:34+00:00"
                                }
                              ]
                            }
                          },
                          {
                            "id": "48467551093011",
                            "product_id": "9193872097555",
                            "title": "$25",
                            "price": "25.00",
                            "position": 2,
                            "inventory_policy": "deny",
                            "compare_at_price": null,
                            "option1": "$25",
                            "option2": null,
                            "option3": null,
                            "created_at": "2024-03-29T09:40:33+00:00",
                            "updated_at": "2024-03-29T09:40:33+00:00",
                            "taxable": false,
                            "barcode": null,
                            "fulfillment_service": "gift_card",
                            "grams": 0,
                            "inventory_management": null,
                            "requires_shipping": false,
                            "sku": "",
                            "weight": 0,
                            "weight_unit": "kg",
                            "inventory_item_id": "50485600092435",
                            "inventory_quantity": 0,
                            "old_inventory_quantity": 0,
                            "image_id": null,
                            "inventory_item": {
                              "id": "50485600092435",
                              "sku": "",
                              "created_at": "2024-03-29T09:40:33+00:00",
                              "updated_at": "2024-03-29T09:40:33+00:00",
                              "requires_shipping": false,
                              "cost": null,
                              "country_code_of_origin": null,
                              "province_code_of_origin": null,
                              "harmonized_system_code": null,
                              "tracked": false,
                              "inventory_levels": [
                                {
                                  "inventory_item_id": "50485600092435",
                                  "location_id": "97423720723",
                                  "available": null,
                                  "updated_at": "2024-03-29T09:40:34+00:00"
                                }
                              ]
                            }
                          },
                          {
                            "id": "48467551158547",
                            "product_id": "9193872097555",
                            "title": "$50",
                            "price": "50.00",
                            "position": 3,
                            "inventory_policy": "deny",
                            "compare_at_price": null,
                            "option1": "$50",
                            "option2": null,
                            "option3": null,
                            "created_at": "2024-03-29T09:40:33+00:00",
                            "updated_at": "2024-03-29T09:40:33+00:00",
                            "taxable": false,
                            "barcode": null,
                            "fulfillment_service": "gift_card",
                            "grams": 0,
                            "inventory_management": null,
                            "requires_shipping": false,
                            "sku": "",
                            "weight": 0,
                            "weight_unit": "kg",
                            "inventory_item_id": "50485600125203",
                            "inventory_quantity": 0,
                            "old_inventory_quantity": 0,
                            "image_id": null,
                            "inventory_item": {
                              "id": "50485600125203",
                              "sku": "",
                              "created_at": "2024-03-29T09:40:33+00:00",
                              "updated_at": "2024-03-29T09:40:33+00:00",
                              "requires_shipping": false,
                              "cost": null,
                              "country_code_of_origin": null,
                              "province_code_of_origin": null,
                              "harmonized_system_code": null,
                              "tracked": false,
                              "inventory_levels": [
                                {
                                  "inventory_item_id": "50485600125203",
                                  "location_id": "97423720723",
                                  "available": null,
                                  "updated_at": "2024-03-29T09:40:34+00:00"
                                }
                              ]
                            }
                          },
                          {
                            "id": "48467551191315",
                            "product_id": "9193872097555",
                            "title": "$100",
                            "price": "100.00",
                            "position": 4,
                            "inventory_policy": "deny",
                            "compare_at_price": null,
                            "option1": "$100",
                            "option2": null,
                            "option3": null,
                            "created_at": "2024-03-29T09:40:33+00:00",
                            "updated_at": "2024-03-29T09:40:33+00:00",
                            "taxable": false,
                            "barcode": null,
                            "fulfillment_service": "gift_card",
                            "grams": 0,
                            "inventory_management": null,
                            "requires_shipping": false,
                            "sku": "",
                            "weight": 0,
                            "weight_unit": "kg",
                            "inventory_item_id": "50485600157971",
                            "inventory_quantity": 0,
                            "old_inventory_quantity": 0,
                            "image_id": null,
                            "inventory_item": {
                              "id": "50485600157971",
                              "sku": "",
                              "created_at": "2024-03-29T09:40:33+00:00",
                              "updated_at": "2024-03-29T09:40:33+00:00",
                              "requires_shipping": false,
                              "cost": null,
                              "country_code_of_origin": null,
                              "province_code_of_origin": null,
                              "harmonized_system_code": null,
                              "tracked": false,
                              "inventory_levels": [
                                {
                                  "inventory_item_id": "50485600157971",
                                  "location_id": "97423720723",
                                  "available": null,
                                  "updated_at": "2024-03-29T09:40:34+00:00"
                                }
                              ]
                            }
                          }
                        ],
                        "options": [
                          {
                            "id": "11557505007891",
                            "product_id": "9193872097555",
                            "name": "Denominations",
                            "position": 1,
                            "values": [
                              "$10",
                              "$25",
                              "$50",
                              "$100"
                            ]
                          }
                        ],
                        "images": [
                          {
                            "id": "45574246203667",
                            "alt": "Gift card that shows text: Generated data gift card",
                            "position": 1,
                            "product_id": "9193872097555",
                            "created_at": "2024-03-29T09:40:33+00:00",
                            "updated_at": "2024-03-29T09:40:33+00:00",
                            "width": 2881,
                            "height": 2881,
                            "src": "https://cdn.shopify.com/s/files/1/0870/1234/4083/files/gift_card.png?v=1711705233",
                            "variant_ids": []
                          }
                        ]
                      }
                    ]
                  },
                  "Report": {
                    "TraceId": "00-3c6a96b919427b0952ba274800a4b04f-7efc4603f4ee42e7-00",
                    "TotalExtResourcesDuration": 356.8311,
                    "TotalEventsTransitDuration": 554.5615,
                    "TotalTransformationsDuration": 690.4757,
                    "TotalRequestsDuration": 4296.1973,
                    "ExtResources": [
                      {
                        "Uri": "https://quickstart.myshopify.com/admin/api/2024-04/orders.json",
                        "Duration": 356.8311
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "kariz_core_api"
            ]
          }
        ]
      }
    },
    "/api/KarizClientApp/Unified/Refunds": {
      "post": {
        "tags": [
          "Refunds"
        ],
        "summary": "List all Refunds",
        "description": "Retrieves a list of refunds for an order.\n\nThe response is compatible with the Shopify REST API refund schema. For detailed schema explanations, see the [Shopify REST API refund resource]([https://shopify.dev/docs/api/admin-rest/2025-01/resources/refund]).",
        "parameters": [
          {
            "name": "channel",
            "in": "query",
            "description": "Specify the sales channel from which to fetch user data. Each request can only retrieve data from a single channel at a time. Since requests are processed in real-time, response times vary depending on the sales channel’s speed",
            "schema": {
              "type": "string",
              "enum": [
                "amazon",
                "bigcommerce",
                "bol",
                "lightspeed_c",
                "shopify",
                "woocommerce",
                "mirakl",
                "magento",
                "bigcommerce"
              ]
            },
            "required": true
          },
          {
            "name": "tpUserId",
            "in": "query",
            "description": "The ID of your user(must be authenticated with target channels).",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "completionCallbackUrl",
            "in": "query",
            "description": "To receive the completion event. You can use a webhook to find out whether the task is finished.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The supported parameters to query the data depend on the channels API. Supported channels shows which parameters can be used for which channels.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRefundBody"
                  },
                  {
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ShopifyBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/WoocommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/AmazonBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BolBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/LightspeedCBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/BigCommerceBodyParams"
                          },
                          {
                            "$ref": "#/components/schemas/MiraklBodyParams"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Shopify": {
                  "summary": "Example with Shopify configuration.",
                  "value": {
                    "params": {
                      "shopify": [
                        {
                          "key": "baseUrl",
                          "value": "your-shop.myshopify.com"
                        },
                        {
                          "key": "token",
                          "value": "your-shopify-oauth-token"
                        }
                      ]
                    },
                    "order_id": "ord_aBcDeFg12345",
                    "fields": "id,status,created_at,total_price",
                    "in_shop_currency": true,
                    "limit": 100
                  }
                },
                "Lightspeed-C": {
                  "summary": "Example with Lightspeed C configuration.",
                  "value": {
                    "params": {
                      "lightspeed_c": [
                        {
                          "key": "region",
                          "value": "nl"
                        },
                        {
                          "key": "token",
                          "value": "Basic eHh4eHh4"
                        }
                      ]
                    },
                    "order_id": "ord_aBcDeFg12345",
                    "fields": "id,status,created_at,total_price",
                    "in_shop_currency": true,
                    "limit": 100
                  }
                },
                "Bigcommerce": {
                  "summary": "Example with Bigcommerce configuration.",
                  "value": {
                    "params": {
                      "bigcommerce": [
                        {
                          "key": "store_hash",
                          "value": "store hash"
                        },
                        {
                          "key": "token",
                          "value": "store token"
                        }
                      ]
                    },
                    "order_id": "ord_aBcDeFg12345",
                    "fields": "id,status,created_at,total_price",
                    "in_shop_currency": true,
                    "limit": 100
                  }
                },
                "Woocommerce": {
                  "summary": "Example with Woocommerce configuration.",
                  "value": {
                    "params": {
                      "woocommerce": [
                        {
                          "key": "baseUrl",
                          "value": "https://domain.com/wordpress"
                        },
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "order_id": "ord_aBcDeFg12345",
                    "fields": "id,status,created_at,total_price",
                    "in_shop_currency": true,
                    "limit": 100
                  }
                },
                "Amazon": {
                  "summary": "Example with Amazon configuration.",
                  "value": {
                    "params": {
                      "amazon": [
                        {
                          "key": "endpoint",
                          "value": "https://sellingpartnerapi-eu.amazon.com"
                        },
                        {
                          "key": "marketplaceIds",
                          "value": [
                            "A1805IZSGTT6HS",
                            "A1PA6795UKMFR9"
                          ]
                        },
                        {
                          "key": "token",
                          "value": "oauth token"
                        }
                      ]
                    },
                    "order_id": "ord_aBcDeFg12345",
                    "fields": "id,status,created_at,total_price",
                    "in_shop_currency": true,
                    "limit": 100
                  }
                },
                "Bol": {
                  "summary": "Example with Bol configuration.",
                  "value": {
                    "params": {
                      "bol": [
                        {
                          "key": "token",
                          "value": "base64 token"
                        }
                      ]
                    },
                    "order_id": "ord_aBcDeFg12345",
                    "fields": "id,status,created_at,total_price",
                    "in_shop_currency": true,
                    "limit": 100
                  }
                },
                "Mirakl": {
                  "summary": "Example with Mirakl configuration.",
                  "value": {
                    "params": {
                      "mirakl": [
                        {
                          "key": "token",
                          "value": "bearer-token"
                        }
                      ]
                    },
                    "order_id": "ord_aBcDeFg12345",
                    "fields": "id,status,created_at,total_price",
                    "in_shop_currency": true,
                    "limit": 100
                  }
                },
                "Magento": {
                  "summary": "Example with Magento configuration.",
                  "value": {
                    "params": {
                      "magento": [
                        {
                          "key": "baseUrl",
                          "value": "https://your-magento-store.com"
                        },
                        {
                          "key": "token",
                          "value": "token"
                        }
                      ]
                    },
                    "order_id": "ord_aBcDeFg12345",
                    "fields": "id,status,created_at,total_price",
                    "in_shop_currency": true,
                    "limit": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /Unified/Refunds Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundResponseWrapper"
                },
                "example": {
                  "Errors": {},
                  "Output": {
                    "step": "transform",
                    "isSuccess": true,
                    "schemaValidationErrors": null,
                    "restErrors": null,
                    "operationErrors": null,
                    "unexpectedErrors": null,
                    "execution_id": "ed7ad663-4757-447c-b5cd-1e83c2380afc",
                    "override_count": 1,
                    "next_page_token_url": "https://api.trykariz.com/api/KarizClientApp/RunSync?configName=shopify_get_orders&tpUserId=1&data=%7B%22limit%22%3A1%2C%22next_page_token%22%3A%22eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0%22%7D",
                    "next_page_token": "eyJsYXN0X2lkIjo1OTU0NDYxMzM1ODI3LCJsYXN0X3ZhbHVlIjoiMjAyNC0wOS0xMyAxNDo0NzoxMy4xNDAwNTEiLCJkaXJlY3Rpb24iOiJuZXh0In0",
                    "result": {
                      "refunds": [
                        {
                          "id": 509562969,
                          "order_id": 450789469,
                          "created_at": "2025-01-02T11:38:15-05:00",
                          "note": "it broke during shipping",
                          "user_id": 548380009,
                          "processed_at": "2025-01-02T11:38:15-05:00",
                          "duties": [],
                          "total_duties_set": {
                            "shop_money": {
                              "amount": "0.00",
                              "currency_code": "USD"
                            },
                            "presentment_money": {
                              "amount": "0.00",
                              "currency_code": "USD"
                            }
                          },
                          "return": null,
                          "restock": true,
                          "additional_fees": [],
                          "total_additional_fees_set": {
                            "shop_money": {
                              "amount": "0.00",
                              "currency_code": "USD"
                            },
                            "presentment_money": {
                              "amount": "0.00",
                              "currency_code": "USD"
                            }
                          },
                          "refund_shipping_lines": [],
                          "admin_graphql_api_id": "gid://shopify/Refund/509562969",
                          "order_adjustments": [],
                          "refund_line_items": [
                            {
                              "id": 104689539,
                              "quantity": 1,
                              "line_item_id": 703073504,
                              "location_id": 487838322,
                              "restock_type": "legacy_restock",
                              "subtotal": 195.66,
                              "total_tax": 3.98,
                              "subtotal_set": {
                                "shop_money": {
                                  "amount": "195.66",
                                  "currency_code": "USD"
                                },
                                "presentment_money": {
                                  "amount": "195.66",
                                  "currency_code": "USD"
                                }
                              },
                              "total_tax_set": {
                                "shop_money": {
                                  "amount": "3.98",
                                  "currency_code": "USD"
                                },
                                "presentment_money": {
                                  "amount": "3.98",
                                  "currency_code": "USD"
                                }
                              },
                              "line_item": {
                                "id": 703073504,
                                "variant_id": 457924702,
                                "title": "IPod Nano - 8gb",
                                "quantity": 1,
                                "sku": "IPOD2008BLACK",
                                "variant_title": "black",
                                "vendor": null,
                                "fulfillment_service": "manual",
                                "product_id": 632910392,
                                "requires_shipping": true,
                                "taxable": true,
                                "gift_card": false,
                                "name": "IPod Nano - 8gb - black",
                                "variant_inventory_management": "shopify",
                                "properties": [],
                                "product_exists": true,
                                "fulfillable_quantity": 1,
                                "grams": 200,
                                "price": "199.00",
                                "total_discount": "0.00",
                                "fulfillment_status": null,
                                "price_set": {
                                  "shop_money": {
                                    "amount": "199.00",
                                    "currency_code": "USD"
                                  },
                                  "presentment_money": {
                                    "amount": "199.00",
                                    "currency_code": "USD"
                                  }
                                },
                                "total_discount_set": {
                                  "shop_money": {
                                    "amount": "0.00",
                                    "currency_code": "USD"
                                  },
                                  "presentment_money": {
                                    "amount": "0.00",
                                    "currency_code": "USD"
                                  }
                                },
                                "discount_allocations": [
                                  {
                                    "amount": "3.33",
                                    "discount_application_index": 0,
                                    "amount_set": {
                                      "shop_money": {
                                        "amount": "3.33",
                                        "currency_code": "USD"
                                      },
                                      "presentment_money": {
                                        "amount": "3.33",
                                        "currency_code": "USD"
                                      }
                                    }
                                  }
                                ],
                                "duties": [],
                                "admin_graphql_api_id": "gid://shopify/LineItem/703073504",
                                "tax_lines": [
                                  {
                                    "title": "State Tax",
                                    "price": "3.98",
                                    "rate": 0.06,
                                    "channel_liable": null,
                                    "price_set": {
                                      "shop_money": {
                                        "amount": "3.98",
                                        "currency_code": "USD"
                                      },
                                      "presentment_money": {
                                        "amount": "3.98",
                                        "currency_code": "USD"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": 709875399,
                              "quantity": 1,
                              "line_item_id": 466157049,
                              "location_id": 487838322,
                              "restock_type": "legacy_restock",
                              "subtotal": 195.67,
                              "total_tax": 3.98,
                              "subtotal_set": {
                                "shop_money": {
                                  "amount": "195.67",
                                  "currency_code": "USD"
                                },
                                "presentment_money": {
                                  "amount": "195.67",
                                  "currency_code": "USD"
                                }
                              },
                              "total_tax_set": {
                                "shop_money": {
                                  "amount": "3.98",
                                  "currency_code": "USD"
                                },
                                "presentment_money": {
                                  "amount": "3.98",
                                  "currency_code": "USD"
                                }
                              },
                              "line_item": {
                                "id": 466157049,
                                "variant_id": 39072856,
                                "title": "IPod Nano - 8gb",
                                "quantity": 1,
                                "sku": "IPOD2008GREEN",
                                "variant_title": "green",
                                "vendor": null,
                                "fulfillment_service": "manual",
                                "product_id": 632910392,
                                "requires_shipping": true,
                                "taxable": true,
                                "gift_card": false,
                                "name": "IPod Nano - 8gb - green",
                                "variant_inventory_management": "shopify",
                                "properties": [
                                  {
                                    "name": "Custom Engraving Front",
                                    "value": "Happy Birthday"
                                  },
                                  {
                                    "name": "Custom Engraving Back",
                                    "value": "Merry Christmas"
                                  }
                                ],
                                "product_exists": true,
                                "fulfillable_quantity": 1,
                                "grams": 200,
                                "price": "199.00",
                                "total_discount": "0.00",
                                "fulfillment_status": null,
                                "price_set": {
                                  "shop_money": {
                                    "amount": "199.00",
                                    "currency_code": "USD"
                                  },
                                  "presentment_money": {
                                    "amount": "199.00",
                                    "currency_code": "USD"
                                  }
                                },
                                "total_discount_set": {
                                  "shop_money": {
                                    "amount": "0.00",
                                    "currency_code": "USD"
                                  },
                                  "presentment_money": {
                                    "amount": "0.00",
                                    "currency_code": "USD"
                                  }
                                },
                                "discount_allocations": [
                                  {
                                    "amount": "3.34",
                                    "discount_application_index": 0,
                                    "amount_set": {
                                      "shop_money": {
                                        "amount": "3.34",
                                        "currency_code": "USD"
                                      },
                                      "presentment_money": {
                                        "amount": "3.34",
                                        "currency_code": "USD"
                                      }
                                    }
                                  }
                                ],
                                "duties": [],
                                "admin_graphql_api_id": "gid://shopify/LineItem/466157049",
                                "tax_lines": [
                                  {
                                    "title": "State Tax",
                                    "price": "3.98",
                                    "rate": 0.06,
                                    "channel_liable": null,
                                    "price_set": {
                                      "shop_money": {
                                        "amount": "3.98",
                                        "currency_code": "USD"
                                      },
                                      "presentment_money": {
                                        "amount": "3.98",
                                        "currency_code": "USD"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          ],
                          "transactions": [
                            {
                              "id": 179259969,
                              "order_id": 450789469,
                              "kind": "refund",
                              "gateway": "bogus",
                              "status": "success",
                              "message": null,
                              "created_at": "2005-08-05T12:59:12-04:00",
                              "test": false,
                              "authorization": "authorization-key",
                              "location_id": null,
                              "user_id": null,
                              "parent_id": 801038806,
                              "processed_at": "2005-08-05T12:59:12-04:00",
                              "device_id": null,
                              "error_code": null,
                              "source_name": "web",
                              "receipt": {},
                              "amount": "209.00",
                              "currency": "USD",
                              "payment_id": "#1001.3",
                              "total_unsettled_set": {
                                "presentment_money": {
                                  "amount": "348.0",
                                  "currency": "USD"
                                },
                                "shop_money": {
                                  "amount": "348.0",
                                  "currency": "USD"
                                }
                              },
                              "manual_payment_gateway": false,
                              "amount_rounding": null,
                              "admin_graphql_api_id": "gid://shopify/OrderTransaction/179259969"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Report": {
                    "TraceId": "00-3c6a96b919427b0952ba274800a4b04f-7efc4603f4ee42e7-00",
                    "TotalExtResourcesDuration": 356.8311,
                    "TotalEventsTransitDuration": 554.5615,
                    "TotalTransformationsDuration": 690.4757,
                    "TotalRequestsDuration": 4296.1973,
                    "ExtResources": [
                      {
                        "Uri": "https://quickstart.myshopify.com/admin/api/2025-01/fulfillments.json",
                        "Duration": 356.8311
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "kariz_core_api"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://sts.demo.trykariz.com/connect/authorize",
            "tokenUrl": "https://sts.demo.trykariz.com/connect/token",
            "scopes": {
              "contracts": "",
              "kariz_client_app": "",
              "kariz_security": "",
              "remote_workflow_execution": "",
              "tp_apps": "",
              "workflows": ""
            }
          }
        }
      }
    },
    "schemas": {
      "KarizClientAppDisposableToken": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "expirationUtcUnixTimeSeconds": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "OrderResponseWrapper": {
        "type": "object",
        "properties": {
          "Errors": {
            "type": "object",
            "properties": {
              "execution_step_name": {
                "type": "object",
                "properties": {
                  "step": {
                    "type": "string"
                  },
                  "isSuccess": {
                    "type": "boolean"
                  },
                  "schemaValidationErrors": {
                    "type": "object"
                  },
                  "restErrors": {
                    "type": "object",
                    "properties": {
                      "status_code": {
                        "type": "integer"
                      },
                      "content_type": {
                        "type": "string"
                      },
                      "content_file_path": {
                        "type": "object"
                      },
                      "headers": {
                        "type": "object",
                        "properties": {
                          "response-header": {
                            "type": "string"
                          }
                        }
                      },
                      "result": {
                        "type": "object",
                        "properties": {
                          "response-body": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "operationErrors": {
                    "type": "object"
                  },
                  "unexpectedErrors": {
                    "type": "object"
                  },
                  "execution_id": {
                    "type": "string"
                  },
                  "override_count": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "Output": {
            "type": "object",
            "properties": {
              "step": {
                "type": "string"
              },
              "isSuccess": {
                "type": "boolean"
              },
              "schemaValidationErrors": {
                "type": "object"
              },
              "restErrors": {
                "type": "object"
              },
              "operationErrors": {
                "type": "object"
              },
              "unexpectedErrors": {
                "type": "object"
              },
              "execution_id": {
                "type": "string"
              },
              "override_count": {
                "type": "integer"
              },
              "next_page_token_url": {
                "type": "string"
              },
              "next_page_token": {
                "type": "string"
              },
              "result": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "Report": {
            "type": "object",
            "properties": {
              "TraceId": {
                "type": "string"
              },
              "TotalExtResourcesDuration": {
                "type": "number"
              },
              "TotalEventsTransitDuration": {
                "type": "number"
              },
              "TotalTransformationsDuration": {
                "type": "number"
              },
              "TotalRequestsDuration": {
                "type": "number"
              },
              "ExtResources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Uri": {
                      "type": "string"
                    },
                    "Duration": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "Errors",
          "Output",
          "Report"
        ]
      },
      "CustomerResponseWrapper": {
        "type": "object",
        "properties": {
          "Errors": {
            "type": "object",
            "properties": {
              "execution_step_name": {
                "type": "object",
                "properties": {
                  "step": {
                    "type": "string"
                  },
                  "isSuccess": {
                    "type": "boolean"
                  },
                  "schemaValidationErrors": {
                    "type": "object"
                  },
                  "restErrors": {
                    "type": "object",
                    "properties": {
                      "status_code": {
                        "type": "integer"
                      },
                      "content_type": {
                        "type": "string"
                      },
                      "content_file_path": {
                        "type": "object"
                      },
                      "headers": {
                        "type": "object",
                        "properties": {
                          "response-header": {
                            "type": "string"
                          }
                        }
                      },
                      "result": {
                        "type": "object",
                        "properties": {
                          "response-body": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "operationErrors": {
                    "type": "object"
                  },
                  "unexpectedErrors": {
                    "type": "object"
                  },
                  "execution_id": {
                    "type": "string"
                  },
                  "override_count": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "Output": {
            "type": "object",
            "properties": {
              "step": {
                "type": "string"
              },
              "isSuccess": {
                "type": "boolean"
              },
              "schemaValidationErrors": {
                "type": "object"
              },
              "restErrors": {
                "type": "object"
              },
              "operationErrors": {
                "type": "object"
              },
              "unexpectedErrors": {
                "type": "object"
              },
              "execution_id": {
                "type": "string"
              },
              "override_count": {
                "type": "integer"
              },
              "next_page_token_url": {
                "type": "string"
              },
              "next_page_token": {
                "type": "string"
              },
              "result": {
                "$ref": "#/components/schemas/Customers"
              }
            }
          },
          "Report": {
            "type": "object",
            "properties": {
              "TraceId": {
                "type": "string"
              },
              "TotalExtResourcesDuration": {
                "type": "number"
              },
              "TotalEventsTransitDuration": {
                "type": "number"
              },
              "TotalTransformationsDuration": {
                "type": "number"
              },
              "TotalRequestsDuration": {
                "type": "number"
              },
              "ExtResources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Uri": {
                      "type": "string"
                    },
                    "Duration": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "Errors",
          "Output",
          "Report"
        ]
      },
      "FulfillmentResponseWrapper": {
        "type": "object",
        "properties": {
          "Errors": {
            "type": "object",
            "properties": {
              "execution_step_name": {
                "type": "object",
                "properties": {
                  "step": {
                    "type": "string"
                  },
                  "isSuccess": {
                    "type": "boolean"
                  },
                  "schemaValidationErrors": {
                    "type": "object"
                  },
                  "restErrors": {
                    "type": "object",
                    "properties": {
                      "status_code": {
                        "type": "integer"
                      },
                      "content_type": {
                        "type": "string"
                      },
                      "content_file_path": {
                        "type": "object"
                      },
                      "headers": {
                        "type": "object",
                        "properties": {
                          "response-header": {
                            "type": "string"
                          }
                        }
                      },
                      "result": {
                        "type": "object",
                        "properties": {
                          "response-body": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "operationErrors": {
                    "type": "object"
                  },
                  "unexpectedErrors": {
                    "type": "object"
                  },
                  "execution_id": {
                    "type": "string"
                  },
                  "override_count": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "Output": {
            "type": "object",
            "properties": {
              "step": {
                "type": "string"
              },
              "isSuccess": {
                "type": "boolean"
              },
              "schemaValidationErrors": {
                "type": "object"
              },
              "restErrors": {
                "type": "object"
              },
              "operationErrors": {
                "type": "object"
              },
              "unexpectedErrors": {
                "type": "object"
              },
              "execution_id": {
                "type": "string"
              },
              "override_count": {
                "type": "integer"
              },
              "next_page_token_url": {
                "type": "string"
              },
              "next_page_token": {
                "type": "string"
              },
              "result": {
                "$ref": "#/components/schemas/Fulfillments"
              }
            }
          },
          "Report": {
            "type": "object",
            "properties": {
              "TraceId": {
                "type": "string"
              },
              "TotalExtResourcesDuration": {
                "type": "number"
              },
              "TotalEventsTransitDuration": {
                "type": "number"
              },
              "TotalTransformationsDuration": {
                "type": "number"
              },
              "TotalRequestsDuration": {
                "type": "number"
              },
              "ExtResources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Uri": {
                      "type": "string"
                    },
                    "Duration": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "Errors",
          "Output",
          "Report"
        ]
      },
      "RefundResponseWrapper": {
        "type": "object",
        "properties": {
          "Errors": {
            "type": "object",
            "properties": {
              "execution_step_name": {
                "type": "object",
                "properties": {
                  "step": {
                    "type": "string"
                  },
                  "isSuccess": {
                    "type": "boolean"
                  },
                  "schemaValidationErrors": {
                    "type": "object"
                  },
                  "restErrors": {
                    "type": "object",
                    "properties": {
                      "status_code": {
                        "type": "integer"
                      },
                      "content_type": {
                        "type": "string"
                      },
                      "content_file_path": {
                        "type": "object"
                      },
                      "headers": {
                        "type": "object",
                        "properties": {
                          "response-header": {
                            "type": "string"
                          }
                        }
                      },
                      "result": {
                        "type": "object",
                        "properties": {
                          "response-body": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "operationErrors": {
                    "type": "object"
                  },
                  "unexpectedErrors": {
                    "type": "object"
                  },
                  "execution_id": {
                    "type": "string"
                  },
                  "override_count": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "Output": {
            "type": "object",
            "properties": {
              "step": {
                "type": "string"
              },
              "isSuccess": {
                "type": "boolean"
              },
              "schemaValidationErrors": {
                "type": "object"
              },
              "restErrors": {
                "type": "object"
              },
              "operationErrors": {
                "type": "object"
              },
              "unexpectedErrors": {
                "type": "object"
              },
              "execution_id": {
                "type": "string"
              },
              "override_count": {
                "type": "integer"
              },
              "next_page_token_url": {
                "type": "string"
              },
              "next_page_token": {
                "type": "string"
              },
              "result": {
                "$ref": "#/components/schemas/Refunds"
              }
            }
          },
          "Report": {
            "type": "object",
            "properties": {
              "TraceId": {
                "type": "string"
              },
              "TotalExtResourcesDuration": {
                "type": "number"
              },
              "TotalEventsTransitDuration": {
                "type": "number"
              },
              "TotalTransformationsDuration": {
                "type": "number"
              },
              "TotalRequestsDuration": {
                "type": "number"
              },
              "ExtResources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Uri": {
                      "type": "string"
                    },
                    "Duration": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "Errors",
          "Output",
          "Report"
        ]
      },
      "InventoryResponseWrapper": {
        "type": "object",
        "properties": {
          "Errors": {
            "type": "object",
            "properties": {
              "execution_step_name": {
                "type": "object",
                "properties": {
                  "step": {
                    "type": "string"
                  },
                  "isSuccess": {
                    "type": "boolean"
                  },
                  "schemaValidationErrors": {
                    "type": "object"
                  },
                  "restErrors": {
                    "type": "object",
                    "properties": {
                      "status_code": {
                        "type": "integer"
                      },
                      "content_type": {
                        "type": "string"
                      },
                      "content_file_path": {
                        "type": "object"
                      },
                      "headers": {
                        "type": "object",
                        "properties": {
                          "response-header": {
                            "type": "string"
                          }
                        }
                      },
                      "result": {
                        "type": "object",
                        "properties": {
                          "response-body": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "operationErrors": {
                    "type": "object"
                  },
                  "unexpectedErrors": {
                    "type": "object"
                  },
                  "execution_id": {
                    "type": "string"
                  },
                  "override_count": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "Output": {
            "type": "object",
            "properties": {
              "step": {
                "type": "string"
              },
              "isSuccess": {
                "type": "boolean"
              },
              "schemaValidationErrors": {
                "type": "object"
              },
              "restErrors": {
                "type": "object"
              },
              "operationErrors": {
                "type": "object"
              },
              "unexpectedErrors": {
                "type": "object"
              },
              "execution_id": {
                "type": "string"
              },
              "override_count": {
                "type": "integer"
              },
              "next_page_token_url": {
                "type": "string"
              },
              "next_page_token": {
                "type": "string"
              },
              "result": {
                "$ref": "#/components/schemas/Inventory"
              }
            }
          },
          "Report": {
            "type": "object",
            "properties": {
              "TraceId": {
                "type": "string"
              },
              "TotalExtResourcesDuration": {
                "type": "number"
              },
              "TotalEventsTransitDuration": {
                "type": "number"
              },
              "TotalTransformationsDuration": {
                "type": "number"
              },
              "TotalRequestsDuration": {
                "type": "number"
              },
              "ExtResources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Uri": {
                      "type": "string"
                    },
                    "Duration": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "Errors",
          "Output",
          "Report"
        ]
      },
      "ProductResponseWrapper": {
        "type": "object",
        "properties": {
          "Errors": {
            "type": "object",
            "properties": {
              "execution_step_name": {
                "type": "object",
                "properties": {
                  "step": {
                    "type": "string"
                  },
                  "isSuccess": {
                    "type": "boolean"
                  },
                  "schemaValidationErrors": {
                    "type": "object"
                  },
                  "restErrors": {
                    "type": "object",
                    "properties": {
                      "status_code": {
                        "type": "integer"
                      },
                      "content_type": {
                        "type": "string"
                      },
                      "content_file_path": {
                        "type": "object"
                      },
                      "headers": {
                        "type": "object",
                        "properties": {
                          "response-header": {
                            "type": "string"
                          }
                        }
                      },
                      "result": {
                        "type": "object",
                        "properties": {
                          "response-body": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "operationErrors": {
                    "type": "object"
                  },
                  "unexpectedErrors": {
                    "type": "object"
                  },
                  "execution_id": {
                    "type": "string"
                  },
                  "override_count": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "Output": {
            "type": "object",
            "properties": {
              "step": {
                "type": "string"
              },
              "isSuccess": {
                "type": "boolean"
              },
              "schemaValidationErrors": {
                "type": "object"
              },
              "restErrors": {
                "type": "object"
              },
              "operationErrors": {
                "type": "object"
              },
              "unexpectedErrors": {
                "type": "object"
              },
              "execution_id": {
                "type": "string"
              },
              "override_count": {
                "type": "integer"
              },
              "next_page_token_url": {
                "type": "string"
              },
              "next_page_token": {
                "type": "string"
              },
              "result": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "Report": {
            "type": "object",
            "properties": {
              "TraceId": {
                "type": "string"
              },
              "TotalExtResourcesDuration": {
                "type": "number"
              },
              "TotalEventsTransitDuration": {
                "type": "number"
              },
              "TotalTransformationsDuration": {
                "type": "number"
              },
              "TotalRequestsDuration": {
                "type": "number"
              },
              "ExtResources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Uri": {
                      "type": "string"
                    },
                    "Duration": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "Errors",
          "Output",
          "Report"
        ]
      },
      "Product": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "body_html": {
              "type": "string"
            },
            "vendor": {
              "type": "string"
            },
            "product_type": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "handle": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "published_at": {
              "type": "string"
            },
            "template_suffix": {
              "type": "string"
            },
            "published_scope": {
              "type": "string",
              "nullable": true,
              "enum": [
                "web",
                "global"
              ]
            },
            "tags": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "nullable": true,
              "enum": [
                "active",
                "archived",
                "draft"
              ]
            },
            "variants": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "product_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "presentment_prices": {
                    "type": "object",
                    "properties": {
                      "presentment_prices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "object",
                              "properties": {
                                "currency_code": {
                                  "type": "string"
                                },
                                "amount": {
                                  "type": "string"
                                }
                              }
                            },
                            "compare_at_price": {
                              "type": "object",
                              "properties": {
                                "currency_code": {
                                  "type": "string"
                                },
                                "amount": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "required": [
                            "price",
                            "compare_at_price"
                          ]
                        }
                      }
                    }
                  },
                  "position": {
                    "type": "number"
                  },
                  "inventory_policy": {
                    "type": "string",
                    "nullable": true,
                    "enum": [
                      "deny",
                      "continue"
                    ]
                  },
                  "compare_at_price": {
                    "type": "string"
                  },
                  "option1": {
                    "type": "string"
                  },
                  "option2": {
                    "type": "string"
                  },
                  "option3": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "taxable": {
                    "type": "boolean"
                  },
                  "barcode": {
                    "type": "string"
                  },
                  "fulfillment_service": {
                    "type": "string"
                  },
                  "grams": {
                    "type": "number"
                  },
                  "inventory_management": {
                    "type": "string"
                  },
                  "requires_shipping": {
                    "type": "boolean"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "weight": {
                    "type": "number"
                  },
                  "weight_unit": {
                    "type": "string"
                  },
                  "inventory_item_id": {
                    "type": "string"
                  },
                  "inventory_quantity": {
                    "type": "number"
                  },
                  "old_inventory_quantity": {
                    "type": "number"
                  },
                  "image_id": {
                    "type": "string"
                  },
                  "inventory_item": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "requires_shipping": {
                        "type": "boolean"
                      },
                      "cost": {
                        "type": "string"
                      },
                      "country_code_of_origin": {
                        "type": "string"
                      },
                      "province_code_of_origin": {
                        "type": "string"
                      },
                      "harmonized_system_code": {
                        "type": "string"
                      },
                      "tracked": {
                        "type": "boolean"
                      },
                      "country_harmonized_system_codes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "harmonized_system_code": {
                              "type": "string"
                            },
                            "country_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "inventory_levels": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "inventory_item_id": {
                              "type": "string"
                            },
                            "location_id": {
                              "type": "string"
                            },
                            "available": {
                              "type": "number"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "product_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number"
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "images": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "alt": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number"
                  },
                  "product_id": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "width": {
                    "type": "number"
                  },
                  "height": {
                    "type": "number"
                  },
                  "src": {
                    "type": "string"
                  },
                  "variant_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GetProductsBody": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "Used to paginate to the next batch of objects. Should be a copy of the next_page_token value from the previous response. \n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `bol`, `amazon`, `magento`\n"
          },
          "limit": {
            "type": "number",
            "description": "Used to limit the number of returned objects. The maximum is 100.\n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `bol`, `amazon`, `magento`\n",
            "default": 10
          },
          "updated_at_min": {
            "type": "string",
            "format": "date-time",
            "description": "Return products updated after this date. Date must be in ISO 8601 format (YYYY-MM-DDTHH:mm:ss[timezone offset]).\n\n Supported channels: `shopify`, `bigcommerce`, `lightspeed_c`",
            "example": "2025-01-25T16:15:47-04:00"
          },
          "updated_at_max": {
            "type": "string",
            "format": "date-time",
            "description": "Return products updated before this date. Date must be in ISO 8601 format (YYYY-MM-DDTHH:mm:ss[timezone offset])\n\n Supported channels: `shopify`, `bigcommerce`, `lightspeed_c`",
            "example": "2025-01-25T16:15:47-04:00"
          },
          "created_at_min": {
            "type": "string",
            "format": "date-time",
            "description": "Return products created after this date. Date must be in ISO 8601 format (YYYY-MM-DDTHH:mm:ss[timezone offset])\n\n Supported channels: `shopify`, `lightspeed_c`",
            "example": "2025-01-25T16:15:47-04:00"
          },
          "created_at_max": {
            "type": "string",
            "format": "date-time",
            "description": "Return products created before this date.  Date must be in ISO 8601 format (YYYY-MM-DDTHH:mm:ss[timezone offset]). \n\n Supported channels: `shopify`, `lightspeed_c`",
            "example": "2025-01-25T16:15:47-04:00"
          },
          "published_at_min": {
            "type": "string",
            "format": "date-time",
            "description": "Return products published after this date.  Date must be in ISO 8601 format (YYYY-MM-DDTHH:mm:ss[timezone offset]). \n\n Supported channels: `shopify`, `woocommerce`",
            "example": "2025-01-25T16:15:47-04:00"
          },
          "published_at_max": {
            "type": "string",
            "format": "date-time",
            "description": "Return products published before this date.  Date must be in ISO 8601 format (YYYY-MM-DDTHH:mm:ss[timezone offset]). \n\n Supported channels: `shopify`, `woocommerce`",
            "example": "2025-01-25T16:15:47-04:00"
          },
          "published_status": {
            "type": "string",
            "default": "any",
            "description": "Return products by their published status.\n\n Supported channels: `shopify`",
            "enum": [
              "published",
              "unpublished",
              "any"
            ]
          },
          "ids": {
            "type": "string",
            "description": "Return only products specified by a comma-separated list of product IDs. \n\n Supported channels: `shopify`, `woocommerce`, `magento`"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "archived",
              "draft"
            ],
            "description": "Return only products specified by a comma-separated list of statuses. \n\n Supported channels: `shopify`, `woocommerce`",
            "default": "any"
          },
          "since_id": {
            "type": "string",
            "description": "Return only products after the specified ID. \n\n Supported channels: `shopify`,`lightspeed_c`"
          },
          "fields": {
            "type": "string",
            "description": "Return only certain fields specified by a comma-separated list of field names.\n\n Supported channels: `shopify`,`lightspeed_c`"
          },
          "collection_id": {
            "type": "string",
            "description": "Return products by product collection ID. \n\n Supported channels: `shopify`, `woocommerce`, `magento`"
          },
          "handle": {
            "type": "string",
            "description": "Return only products specified by a comma-separated list of product handles. \n\n Supported channels: `shopify`, `magento`"
          },
          "product_type": {
            "type": "string",
            "description": "Return products by product type. \n\n Supported channels: `shopify`"
          },
          "title": {
            "type": "string",
            "description": "Return products by product title. \n\n Supported channels: `shopify`, `woocommerce`, `magento`"
          },
          "vendor": {
            "type": "string",
            "description": "Return products by product vendor.\n\n Supported channels: `shopify`,`lightspeed_c`"
          }
        }
      },
      "GetOrdersBody": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "Used to paginate to the next batch of objects. Should be a copy of the next_page_token value from the previous response.\n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `bol`, `amazon`"
          },
          "limit": {
            "type": "number",
            "description": "Used to limit the number of returned objects. The maximum is 100. \n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `amazon`",
            "default": 10
          },
          "updated_at_min": {
            "type": "string",
            "format": "date-time",
            "description": "Show orders last updated at or after date. \n\n Supported channels are `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `bol`, `amazon`"
          },
          "updated_at_max": {
            "type": "string",
            "format": "date-time",
            "description": "Show orders last updated at or before date.\n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `amazon`"
          },
          "created_at_min": {
            "type": "string",
            "format": "date-time",
            "description": "Show orders created at or after date.\n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `amazon`"
          },
          "created_at_max": {
            "type": "string",
            "format": "date-time",
            "description": "Show orders created at or before date.\n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `amazon`"
          },
          "processed_at_min": {
            "type": "string",
            "format": "date-time",
            "description": "Show orders imported at or after date.\n\n Supported channels: `shopify`"
          },
          "processed_at_max": {
            "type": "string",
            "format": "date-time",
            "description": "Show orders imported at or before date.\n\n Supported channels: `shopify`"
          },
          "ids": {
            "type": "string",
            "description": "Retrieve only orders specified by a comma-separated list of order IDs.  \n\n Supported channels are `shopify`, `woocommerce`, `bigcommerce`, `amazon`"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "open",
              "closed",
              "cancelled",
              "any"
            ],
            "description": "Filter orders by their status. \n\n Supported channels are `shopify`, `woocommerce`, `bol`, `amazon`",
            "default": "open"
          },
          "since_id": {
            "type": "string",
            "format": "integer",
            "description": "Show orders after the specified ID. \n\n Supported channels are `shopify`, `woocommerce`, `lightspeed_c`"
          },
          "fields": {
            "type": "string",
            "description": "Retrieve only certain fields, specified by a comma-separated list of fields names. \n\n Supported channels are `shopify`,`lightspeed_c`"
          },
          "attribution_app_id": {
            "type": "string",
            "description": "Show orders attributed to a certain app, specified by the app ID. Set as current to show orders for the app currently consuming the API. \n\n Supported channels are `shopify`"
          },
          "financial_status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "authorized",
              "paid",
              "pending",
              "partially_paid",
              "partially_refunded",
              "refunded",
              "voided",
              "any",
              "unpaid"
            ],
            "description": "Filter orders by their financial status. \n\n Supported channels are `shopify`",
            "default": "any"
          },
          "fulfillment_status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "shipped",
              "partial",
              "unshipped",
              "any",
              "unfulfilled"
            ],
            "description": "Filter orders by their fulfillment status. \n\n Supported channels are `shopify`",
            "default": "any"
          }
        }
      },
      "GetCustomerBody": {
        "type": "object",
        "properties": {
          "created_at_max": {
            "type": "string",
            "nullable": true,
            "description": "Show resources created before or on this specified date and time (ISO 8601 format). Example: 2014-04-25T16:15:47-04:00"
          },
          "created_at_min": {
            "type": "string",
            "nullable": true,
            "description": "Show resources created after or on this specified date and time (ISO 8601 format). Example: 2014-04-25T16:15:47-04:00"
          },
          "fields": {
            "type": "string",
            "nullable": true,
            "description": "Show only certain fields, specified by a comma-separated list of field names (e.g., 'id,email,first_name')."
          },
          "ids": {
            "type": "string",
            "nullable": true,
            "description": "Restrict results to resources specified by a comma-separated list of numeric IDs (e.g., '12345,67890')."
          },
          "limit": {
            "type": "number",
            "description": "The maximum number of results to retrieve.",
            "nullable": true,
            "minimum": 1,
            "maximum": 250,
            "default": 50
          },
          "since_id": {
            "type": "string",
            "nullable": true,
            "description": "Restrict results to those with an ID greater than the specified ID. Used for cursor-based pagination."
          },
          "updated_at_max": {
            "type": "string",
            "nullable": true,
            "description": "Show resources last updated before or on this specified date and time (ISO 8601 format). Example: 2014-04-25T16:15:47-04:00"
          },
          "updated_at_min": {
            "type": "string",
            "nullable": true,
            "description": "Show resources last updated after or on this specified date and time (ISO 8601 format). Example: 2014-04-25T16:15:47-04:00"
          },
          "next_page_token": {
            "type": "string",
            "nullable": true,
            "description": "Used to paginate to the next batch of objects. Should be a copy of the next_page_token value from the previous response. \n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `bol`, `amazon`, `magento`\n"
          }
        }
      },
      "GetFulfillmentBody": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "The unique identifier for the order."
          },
          "created_at_max": {
            "type": "string",
            "format": "date-time",
            "description": "Show fulfillments created at or before this date and time (ISO 8601 format, e.g., 2014-04-25T16:15:47-04:00)."
          },
          "created_at_min": {
            "type": "string",
            "format": "date-time",
            "description": "Show fulfillments created at or after this date and time (ISO 8601 format, e.g., 2014-04-25T16:15:47-04:00)."
          },
          "fields": {
            "type": "string",
            "description": "A comma-separated list of fields to include in the response."
          },
          "limit": {
            "type": "integer",
            "description": "Limit the amount of results.",
            "default": 50,
            "minimum": 1,
            "maximum": 250
          },
          "since_id": {
            "type": "integer",
            "format": "int64",
            "description": "Restrict results to after the specified fulfillment ID (exclusive).",
            "minimum": 0
          },
          "updated_at_max": {
            "type": "string",
            "format": "date-time",
            "description": "Show fulfillments last updated at or before this date and time (ISO 8601 format, e.g., 2014-04-25T16:15:47-04:00)."
          },
          "updated_at_min": {
            "type": "string",
            "format": "date-time",
            "description": "Show fulfillments last updated at or after this date and time (ISO 8601 format, e.g., 2014-04-25T16:15:47-04:00)."
          },
          "next_page_token": {
            "type": "string",
            "nullable": true,
            "description": "Used to paginate to the next batch of objects. Should be a copy of the next_page_token value from the previous response. \n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `bol`, `amazon`, `magento`\n"
          }
        }
      },
      "GetRefundBody": {
        "type": "object",
        "properties": {
          "order_id": {
            "description": "The unique identifier of the order.",
            "nullable": false,
            "type": "string"
          },
          "fields": {
            "description": "Show only certain fields, specified by a comma-separated list of field names.",
            "type": "string",
            "nullable": true,
            "example": "id,status,total_price"
          },
          "in_shop_currency": {
            "description": "Show amounts in the shop currency for the underlying transaction.",
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "limit": {
            "description": "The maximum number of results to retrieve.",
            "type": "integer",
            "default": 50,
            "minimum": 1,
            "maximum": 250
          },
          "next_page_token": {
            "type": "string",
            "nullable": true,
            "description": "Used to paginate to the next batch of objects. Should be a copy of the next_page_token value from the previous response. \n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `bol`, `amazon`, `magento`\n"
          }
        }
      },
      "GetInventoryBody": {
        "type": "object",
        "properties": {
          "inventory_item_ids": {
            "type": "string",
            "description": "A comma-separated list of inventory item IDs. To find the ID of an inventory item, use the Inventory Item resource"
          },
          "limit": {
            "type": "number",
            "nullable": true,
            "default": 1,
            "description": "The maximum number of results to show."
          },
          "location_ids": {
            "type": "string",
            "description": "A comma-separated list of location IDs. To find the ID of a location, use the Location resource"
          },
          "updated_at_min": {
            "type": "string",
            "description": "Show inventory levels updated at or after date (format: 2019-03-19T01:21:44-04:00).",
            "x-hidden": true
          },
          "next_page_token": {
            "type": "string",
            "nullable": true,
            "description": "Used to paginate to the next batch of objects. Should be a copy of the next_page_token value from the previous response. \n\n Supported channels: `shopify`, `woocommerce`, `bigcommerce`, `lightspeed_c`, `bol`, `amazon`, `magento`\n"
          }
        }
      },
      "ShopifyBodyParams": {
        "type": "object",
        "title": "Shopify Parameters",
        "properties": {
          "shopify": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          }
        },
        "required": [
          "shopify"
        ]
      },
      "WoocommerceBodyParams": {
        "type": "object",
        "title": "Woocommerce Parameters",
        "properties": {
          "woocommerce": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "default": "baseUrl",
                  "description": "required(if user is not authenticated), Full shop URL (ex: https://domain.com/wordpress/wp-json)"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          }
        },
        "required": [
          "woocommerce"
        ]
      },
      "MiraklBodyParams": {
        "type": "object",
        "title": "Mirakl Parameters",
        "properties": {
          "mirakl": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          }
        },
        "required": [
          "mirakl"
        ]
      },
      "AmazonBodyParams": {
        "type": "object",
        "title": "Amazon Parameters",
        "properties": {
          "amazon": {
            "description": "The endpoint parameter (ex: https://sellingpartnerapi-eu.amazon.com) find the full list [here](https://developer-docs.amazon.com/sp-api/docs/sp-api-endpoints)\n, The marketplace identifiers(marketplaceIds) used in SP-API (ex: [\"A1805IZSGTT6HS\"]) find the full list [here](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids)",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          }
        },
        "required": [
          "amazon"
        ]
      },
      "BolBodyParams": {
        "type": "object",
        "title": "Bol Parameters",
        "properties": {
          "bol": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          }
        },
        "required": [
          "bol"
        ]
      },
      "LightspeedCBodyParams": {
        "type": "object",
        "title": "LightspeedC Parameters",
        "properties": {
          "lightspeed_c": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          }
        },
        "required": [
          "lightspeed_c"
        ]
      },
      "BigCommerceBodyParams": {
        "type": "object",
        "title": "BigCommerce Parameters",
        "properties": {
          "bigcommerce": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          }
        },
        "required": [
          "bigcommerce"
        ]
      },
      "MagentoBodyParams": {
        "type": "object",
        "title": "Magento Parameters",
        "properties": {
          "magento": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "default": "baseUrl",
                  "description": "required(if user is not authenticated), Full shop URL (ex: https://domain.com)"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          }
        },
        "required": [
          "magento"
        ]
      },
      "Customers": {
        "type": "object",
        "description": "Schema for the Shopify API response containing a list of customers.",
        "required": [
          "customers"
        ],
        "properties": {
          "customers": {
            "type": "array",
            "description": "A list of customer objects.",
            "items": {
              "type": "object",
              "description": "Represents a Shopify customer.",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "A unique identifier for the customer."
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "The unique email address of the customer. Can be null.",
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time (ISO 8601 format) when the customer was created.",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time (ISO 8601 format) when the customer information was last updated.",
                  "readOnly": true
                },
                "first_name": {
                  "type": "string",
                  "description": "The customer's first name.",
                  "nullable": true
                },
                "last_name": {
                  "type": "string",
                  "description": "The customer's last name.",
                  "nullable": true
                },
                "orders_count": {
                  "type": "integer",
                  "description": "The number of orders associated with this customer. Test and archived orders aren't counted.",
                  "readOnly": true
                },
                "state": {
                  "type": "string",
                  "description": "The state of the customer's account with a shop.",
                  "enum": [
                    "disabled",
                    "invited",
                    "enabled",
                    "declined"
                  ],
                  "readOnly": true
                },
                "total_spent": {
                  "type": "string",
                  "pattern": "^\\d+\\.\\d{2}$",
                  "description": "The total amount of money that the customer has spent across their order history.",
                  "readOnly": true
                },
                "last_order_id": {
                  "type": "integer",
                  "description": "The ID of the customer's last order.",
                  "nullable": true,
                  "readOnly": true
                },
                "note": {
                  "type": "string",
                  "description": "A note about the customer.",
                  "nullable": true
                },
                "verified_email": {
                  "type": "boolean",
                  "description": "Whether the customer has verified their email address.",
                  "readOnly": true
                },
                "multipass_identifier": {
                  "type": "string",
                  "description": "A unique identifier for the customer that's used with Multipass login.",
                  "nullable": true
                },
                "tax_exempt": {
                  "type": "boolean",
                  "description": "Whether the customer is exempt from paying taxes on their order."
                },
                "tags": {
                  "type": "string",
                  "description": "Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values."
                },
                "last_order_name": {
                  "type": "string",
                  "description": "The name of the customer's last order. This is directly related to the name field on the Order resource.",
                  "nullable": true,
                  "readOnly": true
                },
                "currency": {
                  "type": "string",
                  "description": "DEPRECATED: The three-letter code (ISO 4217 format) for the currency that the customer used when they paid for their last order.",
                  "deprecated": true
                },
                "phone": {
                  "type": "string",
                  "description": "The unique phone number (E.164 format) for this customer. Can be null.",
                  "nullable": true
                },
                "addresses": {
                  "type": "array",
                  "description": "A list of the ten most recently updated addresses for the customer.",
                  "items": {
                    "type": "object",
                    "description": "Represents a mailing address for the customer.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "A unique identifier for the address."
                      },
                      "customer_id": {
                        "type": "integer",
                        "description": "A unique identifier for the customer."
                      },
                      "first_name": {
                        "type": "string",
                        "description": "The customer's first name at this address.",
                        "nullable": true
                      },
                      "last_name": {
                        "type": "string",
                        "description": "The customer's last name at this address.",
                        "nullable": true
                      },
                      "company": {
                        "type": "string",
                        "description": "The customer's company at this address.",
                        "nullable": true
                      },
                      "address1": {
                        "type": "string",
                        "description": "The first line of the customer's mailing address.",
                        "nullable": true
                      },
                      "address2": {
                        "type": "string",
                        "description": "An additional field for the customer's mailing address.",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "description": "The customer's city, town, or village.",
                        "nullable": true
                      },
                      "province": {
                        "type": "string",
                        "description": "The customer's region name. Typically a province, a state, or a prefecture.",
                        "nullable": true
                      },
                      "country": {
                        "type": "string",
                        "description": "The customer's country.",
                        "nullable": true
                      },
                      "zip": {
                        "type": "string",
                        "description": "The customer's postal code, also known as zip, postcode, Eircode, etc.",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "description": "The customer's phone number at this address.",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The customer's first and last names.",
                        "nullable": true
                      },
                      "province_code": {
                        "type": "string",
                        "description": "The code for the region of the address, such as the province, state, or district. For example QC for Quebec, Canada.",
                        "nullable": true
                      },
                      "country_code": {
                        "type": "string",
                        "description": "The two-letter country code corresponding to the customer's country.",
                        "nullable": true
                      },
                      "country_name": {
                        "type": "string",
                        "description": "The customer's normalized country name.",
                        "nullable": true
                      },
                      "default": {
                        "type": "boolean",
                        "description": "Whether this address is the default address for the customer."
                      }
                    }
                  }
                },
                "tax_exemptions": {
                  "type": "array",
                  "description": "Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "EXEMPT_ALL",
                      "CA_STATUS_CARD_EXEMPTION",
                      "CA_DIPLOMAT_EXEMPTION",
                      "CA_BC_RESELLER_EXEMPTION",
                      "CA_MB_RESELLER_EXEMPTION",
                      "CA_SK_RESELLER_EXEMPTION",
                      "CA_BC_COMMERCIAL_FISHERY_EXEMPTION",
                      "CA_MB_COMMERCIAL_FISHERY_EXEMPTION",
                      "CA_NS_COMMERCIAL_FISHERY_EXEMPTION",
                      "CA_PE_COMMERCIAL_FISHERY_EXEMPTION",
                      "CA_SK_COMMERCIAL_FISHERY_EXEMPTION",
                      "CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION",
                      "CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION",
                      "CA_BC_SUB_CONTRACTOR_EXEMPTION",
                      "CA_SK_SUB_CONTRACTOR_EXEMPTION",
                      "CA_BC_CONTRACTOR_EXEMPTION",
                      "CA_SK_CONTRACTOR_EXEMPTION",
                      "CA_ON_PURCHASE_EXEMPTION",
                      "CA_MB_FARMER_EXEMPTION",
                      "CA_NS_FARMER_EXEMPTION",
                      "CA_SK_FARMER_EXEMPTION"
                    ]
                  }
                },
                "email_marketing_consent": {
                  "type": "object",
                  "description": "The marketing consent information when the customer consented to receiving marketing material by email.",
                  "nullable": true,
                  "required": [
                    "state",
                    "opt_in_level",
                    "consent_updated_at"
                  ],
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "The current email marketing state for the customer (e.g., subscribed, not_subscribed, pending)."
                    },
                    "opt_in_level": {
                      "type": "string",
                      "description": "The marketing subscription opt-in level (e.g., single_opt_in, confirmed_opt_in, unknown).",
                      "enum": [
                        "single_opt_in",
                        "confirmed_opt_in",
                        "unknown",
                        null
                      ],
                      "nullable": true
                    },
                    "consent_updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time (ISO 8601 format) when the customer consented to receive marketing material by email.",
                      "nullable": true
                    }
                  }
                },
                "sms_marketing_consent": {
                  "type": "object",
                  "description": "The marketing consent information when the customer consented to receiving marketing material by SMS.",
                  "nullable": true,
                  "required": [
                    "state",
                    "opt_in_level",
                    "consent_updated_at",
                    "consent_collected_from"
                  ],
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "The current SMS marketing state for the customer."
                    },
                    "opt_in_level": {
                      "type": "string",
                      "description": "The marketing subscription opt-in level.",
                      "enum": [
                        "single_opt_in",
                        "double_opt_in",
                        "unknown",
                        null
                      ],
                      "nullable": true
                    },
                    "consent_updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time (ISO 8601 format) when the customer consented to receive marketing material by SMS.",
                      "nullable": true
                    },
                    "consent_collected_from": {
                      "type": "string",
                      "description": "The source for whether the customer has consented to receive marketing material by SMS (e.g., SHOPIFY, OTHER).",
                      "nullable": true
                    }
                  }
                },
                "admin_graphql_api_id": {
                  "type": "string",
                  "description": "A globally-unique identifier used with the Shopify Admin GraphQL API."
                },
                "default_address": {
                  "type": "object",
                  "description": "The default address for the customer.",
                  "nullable": true,
                  "readOnly": true,
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "A unique identifier for the address."
                    },
                    "customer_id": {
                      "type": "integer",
                      "description": "A unique identifier for the customer."
                    },
                    "first_name": {
                      "type": "string",
                      "description": "The customer's first name.",
                      "nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "description": "The customer's last name.",
                      "nullable": true
                    },
                    "company": {
                      "type": "string",
                      "description": "The customer's company.",
                      "nullable": true
                    },
                    "address1": {
                      "type": "string",
                      "description": "The first line of the customer's mailing address.",
                      "nullable": true
                    },
                    "address2": {
                      "type": "string",
                      "description": "An additional field for the customer's mailing address.",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "description": "The customer's city, town, or village.",
                      "nullable": true
                    },
                    "province": {
                      "type": "string",
                      "description": "The customer's region name. Typically a province, a state, or a prefecture.",
                      "nullable": true
                    },
                    "country": {
                      "type": "string",
                      "description": "The customer's country.",
                      "nullable": true
                    },
                    "zip": {
                      "type": "string",
                      "description": "The customer's postal code, also known as zip, postcode, Eircode, etc.",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "description": "The customer's phone number at this address.",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The customer's first and last names.",
                      "nullable": true
                    },
                    "province_code": {
                      "type": "string",
                      "description": "The alphanumeric code for the customer's region.",
                      "nullable": true
                    },
                    "country_code": {
                      "type": "string",
                      "description": "The two-letter country code corresponding to the customer's country.",
                      "nullable": true
                    },
                    "country_name": {
                      "type": "string",
                      "description": "The customer's normalized country name.",
                      "nullable": true
                    },
                    "default": {
                      "type": "boolean",
                      "description": "Returns true for the default address."
                    }
                  }
                },
                "marketing_opt_in_level": {
                  "type": "string",
                  "description": "DEPRECATED: As of API version 2022-04, this property is deprecated. Use email_marketing_consent instead.",
                  "deprecated": true,
                  "enum": [
                    "single_opt_in",
                    "confirmed_opt_in",
                    "unknown",
                    null
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "Fulfillments": {
        "type": "object",
        "properties": {
          "fulfillments": {
            "type": "array",
            "description": "A list of fulfillment objects.",
            "items": {
              "type": "object",
              "description": "Represents a Shopify fulfillment.",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time when the fulfillment was created. The API returns this value in ISO 8601 format."
                },
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The ID for the fulfillment."
                },
                "fulfillmentLineItems": {
                  "type": "array",
                  "description": "A list of the fulfillment's line items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The ID of the line item within the fulfillment."
                      },
                      "variant_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The ID of the product variant being fulfilled."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the product."
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The number of items in the fulfillment."
                      },
                      "price": {
                        "type": "string",
                        "description": "The price of the item before discounts have been applied in the shop currency."
                      },
                      "price_set": {
                        "type": "object",
                        "description": "The price of the line item in shop and presentment currencies.",
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            }
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "grams": {
                        "type": "integer",
                        "description": "The weight of the item in grams."
                      },
                      "sku": {
                        "type": "string",
                        "description": "The unique identifier of the item in the fulfillment."
                      },
                      "variant_title": {
                        "type": "string",
                        "description": "The title of the product variant being fulfilled."
                      },
                      "vendor": {
                        "type": "string",
                        "description": "The name of the supplier of the item."
                      },
                      "fulfillment_service": {
                        "type": "string",
                        "description": "The service provider who is doing the fulfillment. This field will be deprecated. Use the assigned_location property on the FulfillmentOrder resource instead.",
                        "deprecated": true
                      },
                      "product_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique numeric identifier for the product in the fulfillment."
                      },
                      "requires_shipping": {
                        "type": "boolean",
                        "description": "Whether a customer needs to provide a shipping address when placing an order for this product variant."
                      },
                      "taxable": {
                        "type": "boolean",
                        "description": "Whether the line item is taxable."
                      },
                      "gift_card": {
                        "type": "boolean",
                        "description": "Whether the line item is a gift card."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the product variant."
                      },
                      "variant_inventory_management": {
                        "type": "string",
                        "description": "The name of the inventory management system."
                      },
                      "properties": {
                        "type": "array",
                        "description": "Any additional properties associated with the line item.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "product_exists": {
                        "type": "boolean",
                        "description": "Whether the product exists."
                      },
                      "fulfillable_quantity": {
                        "type": "integer",
                        "description": "The amount available to fulfill. This is the quantity - max (refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity. This field will be deprecated. Use the fulfillable_quantity property of the line_item property on the FulfillmentOrder resource instead.",
                        "deprecated": true
                      },
                      "total_discount": {
                        "type": "string",
                        "description": "The total of any discounts applied to the line item with respect to its total quantity on the order. Instead of using this field, Shopify recommends using discount_allocations, which provides the same information."
                      },
                      "fulfillment_status": {
                        "type": "string",
                        "description": "The status of an order in terms of the line items being fulfilled. Valid values: fulfilled, null, or partial. This field will be deprecated. Use the status property on the FulfillmentOrder resource instead.",
                        "enum": [
                          "fulfilled",
                          "null",
                          "partial"
                        ],
                        "nullable": true,
                        "deprecated": true
                      },
                      "total_discount_set": {
                        "type": "object",
                        "description": "The total amount allocated to the line item in the presentment currency. Instead of using this field, Shopify recommends using discount_allocations, which provides the same information.",
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            }
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "discount_allocations": {
                        "type": "array",
                        "description": "An ordered list of amounts allocated by discount applications.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "string",
                              "description": "The discount amount allocated to the line in the shop currency."
                            },
                            "discount_application_index": {
                              "type": "integer",
                              "description": "The index of the associated discount application in the order's discount_applications list."
                            },
                            "amount_set": {
                              "type": "object",
                              "description": "The discount amount allocated to the line item in shop and presentment currencies.",
                              "properties": {
                                "shop_money": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "string"
                                    },
                                    "currency_code": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "presentment_money": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "string"
                                    },
                                    "currency_code": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "fulfillment_line_item_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "A unique identifier for a quantity of items within a single fulfillment. An order can have multiple fulfillment line items."
                      },
                      "tax_lines": {
                        "type": "array",
                        "description": "The title, price, and rate of any taxes applied to the line item for its total quantity on the order.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "price": {
                              "type": "string"
                            },
                            "rate": {
                              "type": "number",
                              "format": "float"
                            }
                          }
                        }
                      },
                      "duties": {
                        "type": "array",
                        "description": "A list of duty objects, each containing information about a duty on the line item for its total quantity on the order.",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "location_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The unique identifier of the location that the fulfillment was processed at."
                },
                "name": {
                  "type": "string",
                  "description": "The uniquely identifying fulfillment name, consisting of two parts separated by a .. The first part represents the order name and the second part represents the fulfillment number."
                },
                "order_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The unique numeric identifier for the order."
                },
                "originAddress": {
                  "type": "object",
                  "description": "The address of the fulfillment location.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "description": "The street address of the fulfillment location."
                    },
                    "address2": {
                      "type": "string",
                      "description": "The second line of the address. Typically the number of the apartment, suite, or unit."
                    },
                    "city": {
                      "type": "string",
                      "description": "The city of the fulfillment location."
                    },
                    "country_code": {
                      "type": "string",
                      "description": "The two-letter country code (ISO 3166-1 alpha-2 format) of the fulfillment location."
                    },
                    "province_code": {
                      "type": "string",
                      "description": "The province code of the fulfillment location."
                    },
                    "zip": {
                      "type": "string",
                      "description": "The zip code of the fulfillment location."
                    }
                  },
                  "required": [
                    "country_code"
                  ]
                },
                "receipt": {
                  "type": "object",
                  "description": "Deprecated: A text field that provides information about the receipt.",
                  "properties": {
                    "testcase": {
                      "type": "boolean",
                      "description": "Whether the fulfillment was a testcase."
                    },
                    "authorization": {
                      "type": "string",
                      "description": "The authorization code."
                    }
                  },
                  "deprecated": true
                },
                "handle": {
                  "type": "string",
                  "description": "The fulfillment service handle associated with the fulfillment."
                },
                "shipment_status": {
                  "type": "string",
                  "description": "The current shipment status of the fulfillment.",
                  "enum": [
                    "label_printed",
                    "label_purchased",
                    "attempted_delivery",
                    "ready_for_pickup",
                    "confirmed",
                    "in_transit",
                    "out_for_delivery",
                    "delivered",
                    "failure",
                    "null"
                  ],
                  "nullable": true
                },
                "status": {
                  "type": "string",
                  "description": "The status of the fulfillment.",
                  "enum": [
                    "pending",
                    "open",
                    "success",
                    "cancelled",
                    "error",
                    "failure"
                  ]
                },
                "tracking_company": {
                  "type": "string",
                  "description": "The name of the tracking company (e.g., 4PX, AGS, Amazon Logistics UK, An Post, etc.)."
                },
                "tracking_numbers": {
                  "type": "array",
                  "description": "A list of tracking numbers provided by the shipping company.",
                  "items": {
                    "type": "string"
                  }
                },
                "tracking_number": {
                  "type": "string",
                  "description": "A tracking number provided by the shipping company. If multiple tracking numbers exist, only the first one is returned."
                },
                "tracking_urls": {
                  "type": "array",
                  "description": "The URLs of tracking pages for the fulfillment.",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "tracking_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL to track the fulfillment. If multiple tracking URLs exist, only the first one is returned."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time (ISO 8601 format) when the fulfillment was last modified."
                },
                "variant_inventory_management": {
                  "type": "string",
                  "description": "Deprecated: The name of the inventory management service.",
                  "deprecated": true
                }
              }
            }
          }
        }
      },
      "Refunds": {
        "type": "object",
        "properties": {
          "refunds": {
            "type": "array",
            "description": "A list of refund objects.",
            "items": {
              "type": "object",
              "description": "Represents a Shopify refund.",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "order_id": {
                  "type": "integer",
                  "readOnly": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "note": {
                  "type": "string",
                  "nullable": true
                },
                "user_id": {
                  "type": "integer",
                  "nullable": true,
                  "readOnly": true
                },
                "processedAt": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "duties": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "duty_id": {
                        "type": "integer"
                      },
                      "refund_type": {
                        "type": "string",
                        "enum": [
                          "FULL",
                          "PROPORTIONAL"
                        ]
                      }
                    },
                    "required": [
                      "duty_id",
                      "refund_type"
                    ]
                  }
                },
                "total_duties_set": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "shop_money": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "amount",
                        "currency_code"
                      ]
                    },
                    "presentment_money": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "amount",
                        "currency_code"
                      ]
                    }
                  },
                  "required": [
                    "shop_money",
                    "presentment_money"
                  ]
                },
                "return": {
                  "type": "object",
                  "nullable": true,
                  "readOnly": true
                },
                "restock": {
                  "type": "boolean",
                  "deprecated": true
                },
                "additional_fees": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "readOnly": true
                },
                "total_additional_fees_set": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "shop_money": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "amount",
                        "currency_code"
                      ]
                    },
                    "presentment_money": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "amount",
                        "currency_code"
                      ]
                    }
                  },
                  "required": [
                    "shop_money",
                    "presentment_money"
                  ]
                },
                "refundShippingLines": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "shipping_line": {
                        "type": "object"
                      },
                      "shipping_line_id": {
                        "type": "integer"
                      },
                      "subtotal_amount_set": {
                        "type": "object",
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          }
                        },
                        "required": [
                          "shop_money",
                          "presentment_money"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "shipping_line_id",
                      "subtotal_amount_set"
                    ]
                  }
                },
                "admin_graphql_api_id": {
                  "type": "string",
                  "readOnly": true
                },
                "orderAdjustments": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "order_id": {
                        "type": "integer"
                      },
                      "refund_id": {
                        "type": "integer"
                      },
                      "amount": {
                        "type": "number",
                        "deprecated": true
                      },
                      "tax_amount": {
                        "type": "number",
                        "deprecated": true
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "shipping_refund",
                          "refund_discrepancy"
                        ],
                        "deprecated": true
                      },
                      "reason": {
                        "type": "string"
                      },
                      "amount_set": {
                        "type": "object",
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          }
                        },
                        "required": [
                          "shop_money",
                          "presentment_money"
                        ]
                      },
                      "tax_amount_set": {
                        "type": "object",
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          }
                        },
                        "required": [
                          "shop_money",
                          "presentment_money"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "order_id",
                      "refund_id",
                      "reason",
                      "amount_set",
                      "tax_amount_set"
                    ]
                  }
                },
                "refundLineItems": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "line_item_id": {
                        "type": "integer"
                      },
                      "location_id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "restock_type": {
                        "type": "string",
                        "enum": [
                          "no_restock",
                          "cancel",
                          "return",
                          "legacy_restock"
                        ]
                      },
                      "subtotal": {
                        "type": "number"
                      },
                      "total_tax": {
                        "type": "number"
                      },
                      "subtotal_set": {
                        "type": "object",
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          }
                        },
                        "required": [
                          "shop_money",
                          "presentment_money"
                        ]
                      },
                      "total_tax_set": {
                        "type": "object",
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          }
                        },
                        "required": [
                          "shop_money",
                          "presentment_money"
                        ]
                      },
                      "line_item": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "variant_id": {
                            "type": "integer",
                            "nullable": true
                          },
                          "title": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "sku": {
                            "type": "string",
                            "nullable": true
                          },
                          "variant_title": {
                            "type": "string",
                            "nullable": true
                          },
                          "vendor": {
                            "type": "string",
                            "nullable": true
                          },
                          "fulfillment_service": {
                            "type": "string"
                          },
                          "product_id": {
                            "type": "integer",
                            "nullable": true
                          },
                          "requires_shipping": {
                            "type": "boolean"
                          },
                          "taxable": {
                            "type": "boolean"
                          },
                          "gift_card": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "variant_inventory_management": {
                            "type": "string",
                            "nullable": true
                          },
                          "properties": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ]
                            }
                          },
                          "product_exists": {
                            "type": "boolean"
                          },
                          "fulfillable_quantity": {
                            "type": "integer"
                          },
                          "grams": {
                            "type": "integer"
                          },
                          "price": {
                            "type": "string"
                          },
                          "total_discount": {
                            "type": "string"
                          },
                          "fulfillment_status": {
                            "type": "string",
                            "nullable": true
                          },
                          "price_set": {
                            "type": "object",
                            "properties": {
                              "shop_money": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "string"
                                  },
                                  "currency_code": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "currency_code"
                                ]
                              },
                              "presentment_money": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "string"
                                  },
                                  "currency_code": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "currency_code"
                                ]
                              }
                            },
                            "required": [
                              "shop_money",
                              "presentment_money"
                            ]
                          },
                          "total_discount_set": {
                            "type": "object",
                            "properties": {
                              "shop_money": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "string"
                                  },
                                  "currency_code": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "currency_code"
                                ]
                              },
                              "presentment_money": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "string"
                                  },
                                  "currency_code": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "currency_code"
                                ]
                              }
                            },
                            "required": [
                              "shop_money",
                              "presentment_money"
                            ]
                          },
                          "discount_allocations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "string"
                                },
                                "discount_application_index": {
                                  "type": "integer"
                                },
                                "amount_set": {
                                  "type": "object",
                                  "properties": {
                                    "shop_money": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "string"
                                        },
                                        "currency_code": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "amount",
                                        "currency_code"
                                      ]
                                    },
                                    "presentment_money": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "string"
                                        },
                                        "currency_code": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "amount",
                                        "currency_code"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "shop_money",
                                    "presentment_money"
                                  ]
                                }
                              }
                            }
                          },
                          "duties": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "admin_graphql_api_id": {
                            "type": "string"
                          },
                          "tax_lines": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "price": {
                                  "type": "string"
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "channel_liable": {
                                  "type": "boolean",
                                  "nullable": true
                                },
                                "price_set": {
                                  "type": "object",
                                  "properties": {
                                    "shop_money": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "string"
                                        },
                                        "currency_code": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "amount",
                                        "currency_code"
                                      ]
                                    },
                                    "presentment_money": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "string"
                                        },
                                        "currency_code": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "amount",
                                        "currency_code"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "shop_money",
                                    "presentment_money"
                                  ]
                                }
                              },
                              "required": [
                                "title",
                                "price",
                                "rate",
                                "price_set"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "transactions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "order_id": {
                        "type": "integer"
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "refund",
                          "capture",
                          "sale",
                          "authorization",
                          "void",
                          "suggested_refund"
                        ]
                      },
                      "gateway": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "failure",
                          "success",
                          "error"
                        ]
                      },
                      "message": {
                        "type": "string",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "test": {
                        "type": "boolean"
                      },
                      "authorization": {
                        "type": "string",
                        "nullable": true
                      },
                      "location_id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "parent_id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "processed_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "device_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "error_code": {
                        "type": "string",
                        "nullable": true
                      },
                      "source_name": {
                        "type": "string"
                      },
                      "receipt": {
                        "type": "object"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "payment_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "total_unsettled_set": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "currency_code"
                            ]
                          }
                        },
                        "required": [
                          "shop_money",
                          "presentment_money"
                        ]
                      },
                      "manual_payment_gateway": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "amount_rounding": {
                        "type": "object",
                        "nullable": true
                      },
                      "admin_graphql_api_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Inventory": {
        "title": "Shopify Inventory Levels Response",
        "description": "Schema for the Shopify API response containing a list of inventory levels.",
        "type": "object",
        "properties": {
          "inventory_levels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "inventory_item_id": {
                  "type": "integer",
                  "description": "The ID of the inventory item associated with the inventory level. To find the ID of an inventory item, use the Inventory Item resource.",
                  "readOnly": true
                },
                "location_id": {
                  "type": "integer",
                  "description": "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
                },
                "available": {
                  "type": "integer",
                  "nullable": true,
                  "description": "The available quantity of an inventory item at the inventory level's associated location. Returns null if the inventory item is not tracked."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time (ISO 8601 format) when the inventory level was last modified.",
                  "readOnly": true
                },
                "admin_graphql_api_id": {
                  "type": "string",
                  "description": "The GraphQL API ID for the inventory level (Shopify Admin GraphQL API identifier)."
                }
              }
            }
          }
        },
        "required": [
          "inventory_levels"
        ]
      },
      "Order": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the order, used for API purposes. This is different from the `order_number` property, which is the ID used by the shop owner and customer."
            },
            "channel_name": {
              "type": "string",
              "description": "The channel the order originates from. For example `amazon`"
            },
            "app_id": {
              "type": "string",
              "description": "The ID of the app that created the order."
            },
            "billing_address": {
              "description": "The mailing address associated with the payment method. This address is an optional field that won't be available on orders that do not require a payment method. It has the following properties:",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Address"
                }
              ]
            },
            "buyer_accepts_marketing": {
              "type": "boolean",
              "description": "Whether the customer consented to receive email updates from the shop."
            },
            "cancel_reason": {
              "type": "string",
              "description": "The reason why the order was canceled."
            },
            "cancelled_at": {
              "type": "string",
              "description": "The date and time when the order was canceled. Returns `null` if the order isn't canceled.",
              "format": "date-time"
            },
            "checkout_id": {
              "type": "string",
              "description": "A unique value when referencing the checkout that's associated with the order."
            },
            "closed_at": {
              "type": "string",
              "description": "The date and time (ISO 8601 format) when the order was closed. Returns `null` if the order isn't closed.",
              "format": "date-time"
            },
            "confirmed": {
              "type": "boolean",
              "description": "Whether inventory has been reserved for the order."
            },
            "created_at": {
              "type": "string",
              "description": "The date and time (ISO 8601 format) when the order was created in the channel.",
              "format": "date-time"
            },
            "currency": {
              "type": "string",
              "description": "The three letter code (ISO 4217) for the currency used for the payment."
            },
            "customer": {
              "description": "Information about the customer. The order might not have a customer and apps should not depend on the existence of a `customer` object. This value might be `null` depending on the channel.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Customer"
                }
              ]
            },
            "customer_locale": {
              "type": "string",
              "description": "The two or three letter language code, optionally followed by a region modifier. Example values could be `en`, `en-CA`, `en-PIRATE`.",
              "example": "en-CA"
            },
            "device_id": {
              "type": "string",
              "description": "The unique numeric identifier of the POS device used."
            },
            "discount_codes": {
              "type": "array",
              "description": "A list of discounts applied to the order.",
              "items": {
                "$ref": "#/components/schemas/DiscountCode"
              }
            },
            "discount_applications": {
              "type": "array",
              "description": "An ordered list of stacked discount applications.\nThe `discount_applications` property includes 3 types: `discount_code`, `manual`, and `script`. All 3 types share a common structure and have some type specific attributes.",
              "items": {
                "$ref": "#/components/schemas/DiscountApplication"
              }
            },
            "email": {
              "type": "string",
              "description": "The customer's email address."
            },
            "financial_status": {
              "description": "The status of payments associated with the order. Can only be set when the order is created. Valid values:",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderFinancialStatus"
                }
              ]
            },
            "fulfillments": {
              "type": "array",
              "description": "An array of fulfillments associated with the order.",
              "items": {
                "$ref": "#/components/schemas/Fulfillment"
              }
            },
            "fulfillment_status": {
              "description": "The order's status in terms of fulfilled line items.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderFulfillmentStatus"
                }
              ]
            },
            "phone": {
              "type": "string",
              "description": "The customer's phone number for receiving SMS notifications."
            },
            "tags": {
              "type": "string",
              "description": "Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length."
            },
            "line_items": {
              "type": "array",
              "description": "The sum of all line item prices in the shop currency.",
              "items": {
                "$ref": "#/components/schemas/LineItem"
              }
            },
            "location_id": {
              "type": "string",
              "description": "The unique numeric identifier for the physical location at which the order was processed. Only present on orders processed at point of sale."
            },
            "name": {
              "type": "string",
              "description": "The order name as represented by a number",
              "example": "#1001"
            },
            "note": {
              "type": "string",
              "description": "An optional note that a shop owner can attach to the order."
            },
            "number": {
              "type": "string",
              "description": "The order's position in the shop's count of orders. Numbers are sequential and start at 1."
            },
            "order_number": {
              "type": "string",
              "description": "The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001."
            },
            "order_status_url": {
              "type": "string",
              "description": "The URL pointing to the order status web page. The URL will be `null` unless the order was created from a checkout."
            },
            "payment_gateway_names": {
              "type": "array",
              "description": "The list of all payment gateways used for the order.",
              "items": {
                "type": "string"
              }
            },
            "processed_at": {
              "type": "string",
              "description": "The date and time (ISO 8601 format) when an order was processed.",
              "format": "date-time"
            },
            "referring_site": {
              "type": "string",
              "description": "The website where the customer clicked a link to the shop."
            },
            "refunds": {
              "type": "array",
              "description": "A list of refunds applied to the order. ",
              "items": {
                "$ref": "#/components/schemas/Refund"
              }
            },
            "shipping_address": {
              "description": "The mailing address to where the order will be shipped. This address is optional and will not be available on orders that do not require one.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Address"
                }
              ]
            },
            "shipping_lines": {
              "type": "array",
              "description": "An array of objects, each of which details a shipping method used. Each object has the following properties:",
              "items": {
                "$ref": "#/components/schemas/ShippingLine"
              }
            },
            "source_identifier": {
              "type": "string",
              "description": "The ID of the order placed on the originating platform."
            },
            "source_name": {
              "type": "string",
              "description": "Where the order originated, used for sales attribution. May only be set during creation, and is not writeable thereafter."
            },
            "subtotal_price": {
              "type": "string",
              "description": "The subtotal of the order in shop and presentment currencies after discounts but before shipping, duties, taxes, and tips."
            },
            "tax_lines": {
              "type": "array",
              "description": "An array of tax line objects, each of which details a tax applicable to the order. Each object has the following properties:",
              "items": {
                "$ref": "#/components/schemas/TaxLine"
              }
            },
            "taxes_included": {
              "type": "boolean",
              "description": "Whether taxes are included in the order subtotal."
            },
            "test": {
              "type": "boolean",
              "description": "Whether this is a test order."
            },
            "total_discounts": {
              "type": "string",
              "description": "The total amount of the discounts applied to the price of the order."
            },
            "total_line_items_price": {
              "type": "string",
              "description": "The sum of all the prices of all the items in the order."
            },
            "total_tip_received": {
              "type": "string",
              "description": "The sum of all the tips in the order."
            },
            "total_price": {
              "type": "string",
              "description": "The sum of all the prices of all the items in the order, with taxes and discounts included (must be positive)."
            },
            "total_tax": {
              "type": "string",
              "description": "The sum of all the taxes applied to the order (must be positive)."
            },
            "total_weight": {
              "type": "number",
              "description": "The sum of all the weights of the line items in the order, in grams."
            },
            "updated_at": {
              "type": "string",
              "description": "The date and time when the order was last modified.",
              "format": "date-time"
            },
            "user_id": {
              "type": "string",
              "description": "The unique numerical identifier for the user logged into the terminal at the time the order was processed at. Only present on orders processed at point of sale."
            },
            "transactions": {
              "type": "array",
              "description": "",
              "items": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "metafields": {
              "type": "array",
              "description": "Any additional data from the channel that didn't fit in the order model",
              "items": {
                "$ref": "#/components/schemas/MetaField"
              }
            },
            "current_total_duties_set": {
              "description": "The current total duties charged on the order in shop and presentment currencies.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "original_total_duties_set": {
              "description": "The original total duties charged on the order in shop and presentment currencies.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "presentment_currency": {
              "type": "string",
              "description": "The three letter code (ISO 4217) for the currency used used to display prices to the customer."
            },
            "total_line_items_price_set": {
              "description": "The total of all line item prices in shop and presentment currencies.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "total_discounts_set": {
              "description": "The total discounts applied to the price of the order in shop and presentment currencies.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "total_shipping_price_set": {
              "description": "The total shipping price of the order, excluding discounts and returns, in shop and presentment currencies. If taxes_included is set to true, then total_shipping_price_set includes taxes.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "subtotal_price_set": {
              "description": "The subtotal of the order in shop and presentment currencies.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "total_price_set": {
              "description": "The total price of the order in shop and presentment currencies.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "total_outstanding": {
              "type": "string",
              "description": "The total outstanding amount of the order in the shop currency."
            },
            "total_tax_set": {
              "description": "The total tax applied to the order in shop and presentment currencies.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "estimated_taxes": {
              "type": "boolean",
              "description": "Indicates whether taxes on an order are estimated. Will be set to false when taxes on an order are finalized and arent subject to any change."
            },
            "current_subtotal_price": {
              "type": "string",
              "description": "The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
            },
            "current_subtotal_price_set": {
              "description": "The current subtotal price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "current_total_discounts": {
              "type": "string",
              "description": "The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
            },
            "current_total_discounts_set": {
              "description": "The current total discounts on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "current_total_price": {
              "type": "string",
              "description": "The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
            },
            "current_total_price_set": {
              "description": "The current total price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "current_total_tax": {
              "type": "string",
              "description": "The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds."
            },
            "current_total_tax_set": {
              "description": "The current total taxes charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "payment_terms": {
              "description": "The terms and conditions under which a payment should be processed.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PaymentTerms"
                }
              ]
            },
            "current_total_additional_fees_set": {
              "description": "The current total additional fees on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "original_total_additional_fees_set": {
              "description": "The original total additional fees on the order in shop and presentment currencies.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceSet"
                }
              ]
            },
            "po_number": {
              "type": "string",
              "description": "The purchase order number associated to this order."
            },
            "tax_exempt": {
              "type": "boolean",
              "description": "Whether this order was exempt from taxes."
            },
            "company": {
              "description": "Represents information about the purchasing company for the order. `null` will be returned if there is no purchasing company.",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderCompany"
                }
              ]
            }
          }
        }
      },
      "Address": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "address1": {
            "type": "string",
            "description": "The street address of the billing address."
          },
          "address2": {
            "type": "string",
            "description": "An optional additional field for the street address of the billing address."
          },
          "city": {
            "type": "string",
            "description": "The city, town, or village of the billing address."
          },
          "company": {
            "type": "string",
            "description": "The company of the person associated with the billing address."
          },
          "country": {
            "type": "string",
            "description": "The name of the country of the billing address."
          },
          "country_code": {
            "type": "string",
            "description": "The two-letter code (ISO 3166-1 format) for the country of the billing address."
          },
          "country_name": {
            "type": "string",
            "description": ""
          },
          "default": {
            "type": "boolean",
            "description": ""
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the person associated with the shipping address."
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the person associated with the shipping address."
          },
          "name": {
            "type": "string",
            "description": "First and last name combined"
          },
          "phone": {
            "type": "string",
            "description": "The phone number at the shipping address."
          },
          "province": {
            "type": "string",
            "description": "The name of the region (for example, province, state, or prefecture) of the shipping address."
          },
          "province_code": {
            "type": "string",
            "description": "The alphanumeric abbreviation of the region of the shipping address."
          },
          "zip": {
            "type": "string",
            "description": "The postal code (for example, zip, postcode, or Eircode) of the shipping address."
          }
        }
      },
      "Customer": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the customer."
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "addresses": {
            "type": "array",
            "description": "A list of addresses for the customer.",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "created_at": {
            "type": "string",
            "description": "The date and time when the customer was created.",
            "format": "date-time"
          },
          "default_address": {
            "description": "The default address for the customer.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error."
          },
          "first_name": {
            "type": "string",
            "description": "The customer's first name."
          },
          "last_name": {
            "type": "string",
            "description": "The customer's last name."
          },
          "note": {
            "type": "string",
            "description": "A note about the customer."
          },
          "phone": {
            "type": "string",
            "description": "The unique phone number (E.164 format) for this customer."
          },
          "tags": {
            "type": "string",
            "description": "Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values."
          },
          "tax_exempt": {
            "type": "boolean",
            "description": "Whether the customer is exempt from paying taxes on their order. If `true`, then taxes won't be applied to an order at checkout. If `false`, then taxes will be applied at checkout."
          },
          "tax_exemptions": {
            "type": "array",
            "description": "Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only. Valid values:",
            "items": {
              "type": "string"
            }
          },
          "updated_at": {
            "type": "string",
            "description": "The date and time (ISO 8601 format) when the customer information was last updated",
            "format": "date-time"
          },
          "verified_email": {
            "type": "boolean",
            "description": "Whether the customer has verified their email address."
          },
          "sms_marketing_consent": {
            "description": "The marketing consent information when the customer consented to receiving marketing material by SMS.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MarketingConsent"
              }
            ]
          },
          "metafields": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/MetaField"
            }
          },
          "email_marketing_consent": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MarketingConsent"
              }
            ]
          }
        }
      },
      "MarketingConsent": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "state": {
            "type": "string",
            "description": "The current email marketing state for the customer."
          },
          "opt_in_level": {
            "type": "string",
            "description": "The marketing subscription opt-in level, as described in the M3AAWG Sender Best Common Practices, that the customer gave when they consented to receive marketing material by email."
          },
          "consent_updated_at": {
            "type": "string",
            "description": "The date and time when the customer consented to receive marketing material by email. If no date is provided, then the date and time when the consent information was sent is used.",
            "format": "date-time"
          },
          "consent_collected_from": {
            "type": "string",
            "description": "The source for whether the customer has consented to receive marketing material by SMS."
          }
        }
      },
      "MetaField": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": "The date and time when the metafield was created.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The date and time when the metafield was last updated.",
            "format": "date-time"
          },
          "key": {
            "type": "string",
            "description": "Identifier for the metafield (maximum of 30 characters)."
          },
          "value": {
            "type": "object",
            "description": "Information to be stored as metadata. Must be either a string or an int."
          },
          "type": {
            "type": "string",
            "description": "The metafields information type."
          },
          "namespace": {
            "type": "string",
            "description": "Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters)."
          },
          "description": {
            "type": "string",
            "description": "Additional information about the metafield."
          },
          "owner_id": {
            "type": "string",
            "description": "The Id of the resource that the metafield is associated with. This value could be the id of things like product, order, variant, collection."
          },
          "owner_resource": {
            "type": "string",
            "description": "The name of the resource that the metafield is associated with. This could be things like product, order, variant, collection."
          }
        }
      },
      "DiscountCode": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "amount": {
            "type": "string",
            "description": "The amount that's deducted from the order total. When you create an order, this value is the percentage or monetary amount to deduct. After the order is created, this property returns the calculated amount."
          },
          "code": {
            "type": "string",
            "description": "When the associated discount application is of type `code`, this property returns the discount code that was entered at checkout. Otherwise this property returns the title of the discount that was applied."
          },
          "type": {
            "type": "string",
            "description": "The type of discount. Default value: `fixed_amount` Valid values: \n `fixed_amount`: Applies `amount` as a unit of the store's currency. For example, if `amount` is 30 and the store's currency is USD, then 30 USD is deducted from the order total when the discount is applied. \n`percentage`: Applies a discount of `amount` as a percentage of the order total. \n`shipping`: Applies a free shipping discount on orders that have a shipping rate less than or equal to `amount`. For example, if `amount` is 30, then the discount will give the customer free shipping for any shipping rate that is less than or equal to $30."
          }
        }
      },
      "DiscountApplication": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "type": {
            "type": "string",
            "description": "The discount_applications property includes 3 types: `discount_code`, `manual`, and `script`. All 3 types share a common structure and have some type specific attributes."
          },
          "code": {
            "type": "string",
            "description": "The discount code that was used to apply the discount. Available only for discount code applications."
          },
          "title": {
            "type": "string",
            "description": "The title of the discount application, as defined by the merchant. Available only for manual discount applications."
          },
          "description": {
            "type": "string",
            "description": "The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications."
          },
          "value": {
            "type": "string",
            "description": " The value of the discount application as a decimal. This represents the intention of the discount application. For example, if the intent was to apply a 20% discount, then the value will be `20.0`. If the intent was to apply a $15 discount, then the value will be `15.0`."
          },
          "value_type": {
            "type": "string",
            "description": "The type of the value. Valid values: `fixed_amount`: A fixed amount discount value in the currency of the order.`percentage`: A percentage discount value."
          },
          "allocation_method": {
            "type": "string",
            "description": "The method by which the discount application value has been allocated to entitled lines. Valid values: `across`: The value is spread across all entitled lines. `each`: The value is applied onto every entitled line. `one`: The value is applied onto a single line."
          },
          "target_selection": {
            "type": "string",
            "description": ": The lines on the order, of the type defined by target_type, that the discount is allocated over. Valid values: `all`: The discount is allocated onto all lines, `entitled`: The discount is allocated only onto lines it is entitled for. `explicit`: The discount is allocated onto explicitly selected lines."
          },
          "target_type": {
            "type": "string",
            "description": "target_type: The type of line on the order that the discount is applicable on. Valid values: `line_item`: The discount applies to line items. `shipping_line`: The discount applies to shipping lines."
          }
        }
      },
      "OrderFinancialStatus": {
        "type": "string",
        "description": "The status of payments associated with the order. Can only be set when the order is created. Valid values:",
        "nullable": true,
        "enum": [
          "authorized",
          "paid",
          "pending",
          "partially_paid",
          "partially_refunded",
          "refunded",
          "voided"
        ]
      },
      "Fulfillment": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID for the fulfillment."
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": "The date and time when the fulfillment was created in ISO 8601 format.",
            "format": "date-time"
          },
          "line_items": {
            "type": "array",
            "description": "A list of line item objects, each containing information about an item in the order. Each object has the following properties:.",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "order_id": {
            "type": "string",
            "description": "The unique numeric identifier for the order"
          },
          "status": {
            "description": "The status of the fulfillment. Valid values:",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FulfillmentStatus"
              }
            ]
          },
          "location_id": {
            "type": "string",
            "description": "The unique identifier of the location that the fulfillment should be processed for."
          },
          "email": {
            "type": "string",
            "description": "The customers email address"
          },
          "notify_customer": {
            "type": "boolean",
            "description": "A flag indicating whether the customer should be notified."
          },
          "destination": {
            "description": "The destination where the items should be sent upon fulfillment.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "tracking_company": {
            "type": "string",
            "description": "The name of the shipping company."
          },
          "tracking_number": {
            "type": "string",
            "description": "The tracking number for the fulfillment, provided by the shipping company."
          },
          "tracking_numbers": {
            "type": "array",
            "description": "A list of shipping numbers, provided by the shipping company. May be null.",
            "items": {
              "type": "string"
            }
          },
          "tracking_url": {
            "type": "string",
            "description": "The URL to track the fulfillment, provided by the shipping company. May be `null`."
          },
          "tracking_urls": {
            "type": "array",
            "description": "An array of one or more tracking urls, provided by the shipping company. May be `null`.",
            "items": {
              "type": "string"
            }
          },
          "updated_at": {
            "type": "string",
            "description": "The date and time when the fulfillment was last modified.",
            "format": "date-time"
          },
          "variant_inventory_management": {
            "type": "string",
            "description": "States the name of the inventory management service."
          },
          "service": {
            "type": "string",
            "description": "The fulfillment service associated with the fulfillment."
          },
          "shipment_status": {
            "description": "The current shipment status of the fulfillment. Valid values:",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FulfillmentShipmentStatus"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "The uniquely identifying fulfillment name, consisting of two parts separated by a `.`. The first part represents the order name and the second part represents the fulfillment number. The fulfillment number automatically increments depending on how many fulfillments are in an order (e.g. `#1001.1`, `#1001.2`)"
          },
          "origin_address": {
            "description": "The address of the fulfillment location. This property is intended for tax purposes, as a full address is required for tax providers to accurately calculate taxes.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          }
        }
      },
      "LineItem": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the line item within the fulfillment."
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "fulfillable_quantity": {
            "type": "number",
            "description": "The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity."
          },
          "fulfillment_service": {
            "type": "string",
            "description": "Service provider who is doing the fulfillment. Valid values are either 'manual' or the name of the provider. eg: 'amazon', 'shipwire', etc."
          },
          "fulfillment_status": {
            "description": "The status of an order in terms of the line items being `fulfilled`. Valid values: `fulfilled`, `null`, or `partial`. This field will be deprecated. Use the `status` property on the `FulfillmentOrder` resource instead.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LineFulfillmentStatus"
              }
            ]
          },
          "grams": {
            "type": "number",
            "description": "The weight of the item in grams.",
            "format": "int64"
          },
          "price": {
            "type": "string",
            "description": "The price of the item before discounts have been applied."
          },
          "product_id": {
            "type": "string",
            "description": "The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date"
          },
          "quantity": {
            "type": "number",
            "description": "The number of products that were purchased."
          },
          "requires_shipping": {
            "type": "boolean",
            "description": "States whether or not the fulfillment requires shipping."
          },
          "sku": {
            "type": "string",
            "description": "A unique identifier of the item in the fulfillment."
          },
          "title": {
            "type": "string",
            "description": "The title of the product."
          },
          "variant_id": {
            "type": "string",
            "description": "The id of the product variant. Can be null if the product purchased is not a variant."
          },
          "variant_title": {
            "type": "string",
            "description": "The title of the product variant. Can be null if the product purchased is not a variant."
          },
          "name": {
            "type": "string",
            "description": "The name of the product variant."
          },
          "vendor": {
            "type": "string",
            "description": "The name of the supplier of the item."
          },
          "gift_card": {
            "type": "boolean",
            "description": "States whether the order used a gift card."
          },
          "taxable": {
            "type": "boolean",
            "description": "States whether or not the product was taxable."
          },
          "tax_lines": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/TaxLine"
            }
          },
          "total_discount": {
            "type": "string",
            "description": "he total discount amount applied to this line item. This value is not subtracted in the line item price."
          },
          "total_discount_set": {
            "description": "The total discount applied to the line item in shop and presentment currencies.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          },
          "discount_allocations": {
            "type": "array",
            "description": "An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.",
            "items": {
              "$ref": "#/components/schemas/DiscountAllocation"
            }
          },
          "properties": {
            "type": "array",
            "description": "An array of custom information for an item that has been added to the cart. Often used to provide product customization options.",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            }
          },
          "product_exists": {
            "type": "boolean",
            "description": ""
          },
          "price_set": {
            "description": "The price of the line item in shop and presentment currencies",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          },
          "pre_tax_price": {
            "type": "number",
            "description": "The price per item, excluding taxes and excluding discounts.",
            "format": "decimal"
          },
          "pre_tax_price_set": {
            "description": "The price per item, excluding taxes and excluding discounts in shop and presentment currencies.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          },
          "fulfillment_line_item_id": {
            "type": "string",
            "description": "A unique identifier for a quantity of items within a single fulfillment. An order can have multiple fulfillment line items."
          }
        }
      },
      "LineFulfillmentStatus": {
        "type": "string",
        "description": "The status of an order in terms of the line items being fulfilled. Valid values: `fulfilled`, `null`, or `partial`. This field will be deprecated. Use the `status` property on the `FulfillmentOrder` resource instead.",
        "nullable": true,
        "enum": [
          "fulfilled",
          "partial",
          "restocked"
        ]
      },
      "TaxLine": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "price": {
            "type": "string",
            "description": "The amount of tax to be charged."
          },
          "rate": {
            "type": "number",
            "description": "The rate of tax to be applied.",
            "format": "decimal"
          },
          "title": {
            "type": "string",
            "description": "The name of the tax."
          },
          "price_set": {
            "description": "The amount added to the order for this tax in shop and presentment currencies.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          }
        }
      },
      "PriceSet": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "shop_money": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          },
          "presentment_money": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          }
        }
      },
      "Price": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "currency_code": {
            "type": "string",
            "description": "The three-letter code (ISO 4217 format) for currency."
          },
          "amount": {
            "type": "string",
            "description": "The amount in the currency."
          }
        }
      },
      "DiscountAllocation": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "amount": {
            "type": "string",
            "description": ""
          },
          "discount_application_index": {
            "type": "number",
            "description": "",
            "format": "int64"
          },
          "amount_set": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          }
        }
      },
      "NameValue": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "name": {
            "type": "string",
            "description": ""
          },
          "value": {
            "type": "string",
            "description": ""
          }
        }
      },
      "FulfillmentStatus": {
        "type": "string",
        "description": "",
        "nullable": true,
        "enum": [
          "pending",
          "open",
          "success",
          "cancelled",
          "error",
          "failure"
        ]
      },
      "FulfillmentShipmentStatus": {
        "type": "string",
        "description": "",
        "nullable": true,
        "enum": [
          "label_printed",
          "label_purchased",
          "attempted_delivery",
          "ready_for_pickup",
          "confirmed",
          "in_transit",
          "out_for_delivery",
          "delivered",
          "failure"
        ]
      },
      "OrderFulfillmentStatus": {
        "type": "string",
        "description": "",
        "nullable": true,
        "enum": [
          "fulfilled",
          "partial",
          "restocked"
        ]
      },
      "Refund": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "order_id": {
            "type": "string",
            "description": "The unique identifier of the order."
          },
          "created_at": {
            "type": "string",
            "description": "The date and time when the refund was created. ",
            "format": "date-time"
          },
          "notify": {
            "type": "boolean",
            "description": "Whether to send a refund notification to the customer"
          },
          "shipping": {
            "description": "Specify how much shipping to refund.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Shipping"
              }
            ]
          },
          "currency": {
            "type": "string",
            "description": "The three-letter code (ISO 4217 format) for the currency used for the refund. Note: Required whenever the shipping amount property is provided."
          },
          "order_adjustments": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/RefundOrderAdjustment"
            }
          },
          "processed_at": {
            "type": "string",
            "description": "The date and time when the refund was imported.",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "description": "The optional note attached to a refund."
          },
          "discrepancy_reason": {
            "type": "string",
            "description": "An optional comment that explains a discrepancy between calculated and actual refund amounts. "
          },
          "refund_line_items": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/RefundLineItem"
            }
          },
          "transactions": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "user_id": {
            "type": "string",
            "description": "The unique identifier of the user who performed the refund."
          },
          "duties": {
            "type": "array",
            "description": "A list of duties that have been returned as part of the refund.",
            "items": {
              "$ref": "#/components/schemas/RefundDuty"
            }
          },
          "refund_duties": {
            "type": "array",
            "description": "A list of refunded duties",
            "items": {
              "$ref": "#/components/schemas/RefundDutyType"
            }
          }
        }
      },
      "Shipping": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "full_refund": {
            "type": "boolean",
            "description": "Whether to refund all remaining shipping."
          },
          "amount": {
            "type": "string",
            "description": "Set a specific amount to refund for shipping. Takes precedence over full_refund."
          },
          "maximum_refundable": {
            "type": "number",
            "description": "The maximum amount that can be refunded",
            "format": "decimal"
          }
        }
      },
      "RefundOrderAdjustment": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "order_id": {
            "type": "string",
            "description": "The unique identifier of the order"
          },
          "refund_id": {
            "type": "string",
            "description": "The unique identifier of the refund"
          },
          "amount": {
            "type": "string",
            "description": "The amount refunded (it is negative and does not include tax)."
          },
          "tax_amount": {
            "type": "number",
            "description": "The tax amount refunded (negative).",
            "format": "decimal"
          },
          "kind": {
            "type": "string",
            "description": "The type of adjustment. Values include 'refund_discrepancy', 'shipping_refund'"
          },
          "reason": {
            "type": "string",
            "description": "Reason for the refund"
          },
          "amount_set": {
            "description": "The amount of the order adjustment in shop and presentment currencies.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          },
          "tax_amount_set": {
            "description": "The tax amount of the order adjustment in shop and presentment currencies.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          }
        }
      },
      "RefundLineItem": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "line_item": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LineItem"
              }
            ]
          },
          "line_item_id": {
            "type": "string",
            "description": "The unique identifier of the refund line item."
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of the associated line item that was returned."
          },
          "total_tax": {
            "type": "string",
            "description": "Tax amount refunded",
            "format": "decimal"
          },
          "subtotal": {
            "type": "string",
            "description": "Item subtotal",
            "format": "decimal"
          },
          "subtotal_set": {
            "description": "The subtotal of the refund line item in shop and presentment currencies.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          },
          "total_tax_set": {
            "description": "The total tax of the line item in shop and presentment currencies.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          },
          "restock_type": {
            "type": "string",
            "description": "How this refund line item affects inventory levels."
          },
          "location_id": {
            "type": "string",
            "description": "The unique identifier of the location where the items will be restocked. Required when restock_type has the value return or cancel."
          }
        }
      },
      "Transaction": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "amount": {
            "type": "string",
            "description": "The amount of money that the transaction was for."
          },
          "authorization": {
            "type": "string",
            "description": "The authorization code associated with the transaction."
          },
          "authorization_expires_at": {
            "type": "string",
            "description": "The date and time when the Channel Payments authorization expires.",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "description": "The date and time when the transaction was created.",
            "format": "date-time"
          },
          "device_id": {
            "type": "string",
            "description": "The unique identifier for the device."
          },
          "gateway": {
            "type": "string",
            "description": "The name of the gateway the transaction was issued through."
          },
          "source_name": {
            "type": "string",
            "description": "The origin of the transaction. Example values include: web, pos, iphone, android."
          },
          "source": {
            "type": "string",
            "description": "The origin of the transaction. Set to 'external' to create a cash transaction for the associated order."
          },
          "payment_details": {
            "description": "An object containing information about the credit card used for this transaction.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentDetails"
              }
            ]
          },
          "kind": {
            "type": "string",
            "description": "The kind of transaction. Known values are authorization, capture, sale, void and refund."
          },
          "order_id": {
            "type": "string",
            "description": "A unique numeric identifier for the order."
          },
          "error_code": {
            "type": "string",
            "description": "A standardized error code, e.g. incorrect_number, independent of the payment provider. Value can be null."
          },
          "status": {
            "description": "The status of the transaction. Valid values are: pending, failure, success or error.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TransactionStatus"
              }
            ]
          },
          "test": {
            "type": "boolean",
            "description": "Whether the transaction is for testing purposes."
          },
          "user_id": {
            "type": "string",
            "description": "The unique identifier for the user."
          },
          "currency": {
            "type": "string",
            "description": "The three letter code (ISO 4217) for the currency used for the payment."
          },
          "message": {
            "type": "string",
            "description": ""
          },
          "location_id": {
            "type": "string",
            "description": ""
          },
          "parent_id": {
            "type": "string",
            "description": ""
          },
          "processed_at": {
            "type": "string",
            "description": "",
            "format": "date-time"
          },
          "maximum_refundable": {
            "type": "number",
            "description": "The maximum amount that can be refunded",
            "format": "decimal"
          },
          "currency_exchange_adjustment": {
            "description": "An adjustment on the transaction showing the amount lost or gained due to fluctuations in the currency exchange rate",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyExchangeAdjustment"
              }
            ]
          },
          "payments_refund_attributes": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentsRefundAttributes"
              }
            ]
          },
          "payment_id": {
            "type": "string",
            "description": "Unique ID is now sent to payment providers when a customer pays at checkout. "
          },
          "total_unsettled_set": {
            "description": "Specifies the available amount with currency to capture on the gateway in shop and presentment currencies. Only available when an amount is capturable or manually mark as paid.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          },
          "adjustment_reason": {
            "type": "string",
            "description": "The reason for the adjustment that is associated with the transaction. If the source_type is not an adjustment, the value will be null."
          }
        }
      },
      "PaymentDetails": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "avs_result_code": {
            "type": "string",
            "description": ""
          },
          "credit_card_bin": {
            "type": "string",
            "description": ""
          },
          "cvv_result_code": {
            "type": "string",
            "description": ""
          },
          "credit_card_number": {
            "type": "string",
            "description": ""
          },
          "credit_card_company": {
            "type": "string",
            "description": ""
          },
          "credit_card_name": {
            "type": "string",
            "description": ""
          },
          "credit_card_wallet": {
            "type": "string",
            "description": ""
          },
          "credit_card_expiration_month": {
            "type": "number",
            "description": ""
          },
          "credit_card_expiration_year": {
            "type": "number",
            "description": ""
          },
          "payment_method_name": {
            "type": "string",
            "description": ""
          }
        }
      },
      "TransactionStatus": {
        "type": "string",
        "description": "",
        "nullable": true,
        "enum": [
          "pending",
          "failure",
          "success",
          "error"
        ]
      },
      "CurrencyExchangeAdjustment": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "adjustment": {
            "type": "number",
            "description": "The difference between the amounts on the associated transaction and the parent transaction.",
            "format": "decimal"
          },
          "original_amount": {
            "type": "number",
            "description": "The amount of the parent transaction in the shop currency.",
            "format": "decimal"
          },
          "final_amount": {
            "type": "number",
            "description": "The amount of the associated transaction in the shop currency.",
            "format": "decimal"
          },
          "currency": {
            "type": "string",
            "description": "The shop currency."
          }
        }
      },
      "PaymentsRefundAttributes": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "status": {
            "type": "string",
            "description": "The current status of the refund. Valid values: pending, failure, success, and error."
          },
          "acquirer_reference_number": {
            "type": "string",
            "description": "A unique number associated with the transaction that can be used to track the refund. This property has a value only for transactions completed with Visa or Mastercard."
          }
        }
      },
      "RefundDuty": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "duty_id": {
            "type": "string",
            "description": ""
          },
          "amount_set": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          }
        }
      },
      "RefundDutyType": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "duty_id": {
            "type": "string",
            "description": ""
          },
          "refund_type": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ShippingLine": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "carrier_identifier": {
            "type": "string",
            "description": "The carrier provided identifier."
          },
          "code": {
            "type": "string",
            "description": "A reference to the shipping method."
          },
          "is_removed": {
            "type": "boolean",
            "description": "Whether the shipping line has been removed from the order."
          },
          "phone": {
            "type": "string",
            "description": "The phone number used for the shipment."
          },
          "price": {
            "type": "string",
            "description": "The price of this shipping method."
          },
          "discounted_price": {
            "type": "string",
            "description": "The discounted price of this shipping method."
          },
          "discount_allocations": {
            "type": "array",
            "description": "An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.",
            "items": {
              "$ref": "#/components/schemas/DiscountAllocation"
            }
          },
          "source": {
            "type": "string",
            "description": "The source of the shipping method."
          },
          "title": {
            "type": "string",
            "description": "The title of the shipping method."
          },
          "tax_lines": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/TaxLine"
            }
          },
          "price_set": {
            "description": "The price of the shipping method in shop and presentment currencies.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          },
          "discounted_price_set": {
            "description": "The price of the shipping method in both shop and presentment currencies after line-level discounts have been applied.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceSet"
              }
            ]
          }
        }
      },
      "PaymentTerms": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "amount": {
            "type": "string",
            "description": "The amount that is owed according to the payment terms."
          },
          "currency": {
            "type": "string",
            "description": "The presentment currency for the payment"
          },
          "due_in_days": {
            "type": "number",
            "description": "The number of days between the invoice date and due date that is defined in the selected payment terms template."
          },
          "payment_terms_name": {
            "type": "string",
            "description": "The name of the selected payment terms template for the order."
          },
          "payment_terms_type": {
            "type": "string",
            "description": "The type of selected payment terms template for the order."
          },
          "payment_schedules": {
            "type": "array",
            "description": "An array of schedules associated to the payment terms.",
            "items": {
              "$ref": "#/components/schemas/PaymentSchedule"
            }
          }
        }
      },
      "PaymentSchedule": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "amount": {
            "type": "string",
            "description": "The amount that is owed according to the payment terms."
          },
          "currency": {
            "type": "string",
            "description": "The presentment currency for the payment"
          },
          "issued_at": {
            "type": "string",
            "description": "The date and time when the payment terms were initiated",
            "format": "date-time"
          },
          "due_at": {
            "type": "string",
            "description": "The date and time when the payment is due. Calculated based on issued_at and due_in_days or a customized fixed date if the type is fixed.",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "description": "The date and time when the purchase is completed. Returns null initially and updates when the payment is captured",
            "format": "date-time"
          },
          "expected_payment_method": {
            "type": "string",
            "description": "The name of the payment method gateway."
          }
        }
      },
      "OrderCompany": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "channel_name": {
            "type": "string",
            "description": ""
          },
          "location_id": {
            "type": "string",
            "description": ""
          }
        }
      },
      "TransformDataResult": {
        "type": "object",
        "properties": {
          "transformed_data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}